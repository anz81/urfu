<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetTopologySuite.IO.SpatiaLite</name>
    </assembly>
    <members>
        <member name="T:NetTopologySuite.IO.GaiaGeoEndianMarker">
            <summary>
            Defines byte storage order
            </summary>
        </member>
        <member name="T:NetTopologySuite.IO.GaiaGeoGeometryEntity">
            <summary>
            Generic geometry classes
            </summary>
        </member>
        <member name="T:NetTopologySuite.IO.GaiaGeoBlobMark">
            <summary>
            Special markers used for encoding of SpatiaLite internal BLOB geometries
            </summary>
        </member>
        <member name="T:NetTopologySuite.IO.GaiaGeoGeometry">
            <summary>
            Defines Geometry classes
            </summary>
        </member>
        <member name="T:NetTopologySuite.IO.GaiaGeoReader">
            <summary>
            Class to read SpatiaLite geometries from an array of bytes
            </summary>
        </member>
        <member name="M:NetTopologySuite.IO.GaiaGeoReader.#ctor">
            <summary>
            Creates an instance of this class using the default <see cref="T:NetTopologySuite.Geometries.CoordinateSequenceFactory"/> and <see cref="T:NetTopologySuite.Geometries.PrecisionModel"/> to use.
            </summary>
        </member>
        <member name="M:NetTopologySuite.IO.GaiaGeoReader.#ctor(NetTopologySuite.Geometries.CoordinateSequenceFactory,NetTopologySuite.Geometries.PrecisionModel)">
            <summary>
            Creates an instance of this class using the provided <see cref="T:NetTopologySuite.Geometries.CoordinateSequenceFactory"/> and <see cref="T:NetTopologySuite.Geometries.PrecisionModel"/> to use.
            </summary>
        </member>
        <member name="M:NetTopologySuite.IO.GaiaGeoReader.#ctor(NetTopologySuite.Geometries.CoordinateSequenceFactory,NetTopologySuite.Geometries.PrecisionModel,NetTopologySuite.Geometries.Ordinates)">
            <summary>
            Creates an instance of this class using the provided <see cref="T:NetTopologySuite.Geometries.CoordinateSequenceFactory"/> and <see cref="T:NetTopologySuite.Geometries.PrecisionModel"/> to use.
            Additionally the ordinate values that are to be handled can be set.
            </summary>
        </member>
        <member name="P:NetTopologySuite.IO.GaiaGeoReader.RepairRings">
            <inheritdoc cref="P:NetTopologySuite.IO.WKBReader.RepairRings" />
        </member>
        <member name="P:NetTopologySuite.IO.GaiaGeoReader.HandleSRID">
            <inheritdoc cref="P:NetTopologySuite.IO.WKBReader.HandleSRID" />
        </member>
        <member name="P:NetTopologySuite.IO.GaiaGeoReader.AllowedOrdinates">
            <inheritdoc cref="P:NetTopologySuite.IO.WKBReader.AllowedOrdinates" />
        </member>
        <member name="P:NetTopologySuite.IO.GaiaGeoReader.HandleOrdinates">
            <inheritdoc cref="P:NetTopologySuite.IO.WKBReader.HandleOrdinates" />
        </member>
        <member name="M:NetTopologySuite.IO.GaiaGeoReader.Read(System.Byte[])">
            <summary>
            Deserializes a <see cref="T:NetTopologySuite.Geometries.Geometry"/> from the given byte array.
            </summary>
            <param name="blob">The byte array to read the geometry from.</param>
            <returns>The deserialized <see cref="T:NetTopologySuite.Geometries.Geometry"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="blob"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:NetTopologySuite.IO.GaiaGeoReader.Read(System.IO.Stream)">
            <summary>
            Deserializes a <see cref="T:NetTopologySuite.Geometries.Geometry"/> from the given <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read the geometry from.</param>
            <returns>The deserialized <see cref="T:NetTopologySuite.Geometries.Geometry"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="stream"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:NetTopologySuite.IO.GaiaGeoWriter">
            <summary>
            Creates a 
            </summary>
        </member>
        <member name="F:NetTopologySuite.IO.GaiaGeoWriter.AllowedOrdinates">
            <summary>
            Gets the <see cref="T:NetTopologySuite.Geometries.Ordinates"/> that this class can write.
            </summary>
        </member>
        <member name="P:NetTopologySuite.IO.GaiaGeoWriter.HandleOrdinates">
            <summary>
            Gets or sets the maximum <see cref="T:NetTopologySuite.Geometries.Ordinates"/> to write out.
            The default is equivalent to <see cref="F:NetTopologySuite.IO.GaiaGeoWriter.AllowedOrdinates"/>.
            </summary>
            <remarks>
            <para>
            The purpose of this property is to <b>restrict</b> what gets written out to ensure that,
            e.g., Z values are never written out even if present on a geometry instance.  Ordinates
            that are not present on a geometry instance will be omitted regardless of this value.
            </para>
            <para>
            Flags not present in <see cref="F:NetTopologySuite.IO.GaiaGeoWriter.AllowedOrdinates"/> are silently ignored.
            </para>
            <para>
            <see cref="F:NetTopologySuite.Geometries.Ordinates.X"/> and <see cref="F:NetTopologySuite.Geometries.Ordinates.Y"/> are always present.
            </para>
            </remarks>
        </member>
        <member name="P:NetTopologySuite.IO.GaiaGeoWriter.UseCompressed">
            <summary>
            Gets or sets whether geometries should be written in compressed form
            </summary>
        </member>
    </members>
</doc>
