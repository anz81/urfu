#pragma checksum "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Students\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6e2fc06c5f5851d97e66415df618d2e7a408595a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Students_Index), @"mvc.1.0.view", @"/Views/Students/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\_ViewImports.cshtml"
using Urfu.Its.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Students\Index.cshtml"
using Urfu.Its.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6e2fc06c5f5851d97e66415df618d2e7a408595a", @"/Views/Students/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"571aa92c4ca967469f2915635495580dde4274ca", @"/Views/_ViewImports.cshtml")]
    public class Views_Students_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Students\Index.cshtml"
  
    ViewBag.Title = "Студенты";
    Layout = "~/Views/Shared/_ExtLayout.cshtml";

#line default
#line hidden
#nullable disable
            DefineSection("scripts", async() => {
                WriteLiteral(@"
<script type=""text/javascript"">

        Ext.onReady(function() {
            Ext.tip.QuickTipManager.init();

            var store = Ext.create(""Ext.data.BufferedStore"",
            {
                fields: [""id"", ""name"", ""status"", ""groupName"", ""rating"", ""Sportsman""],
                autoLoad: true,
                pageSize: 300,
                remoteSort: true,
                remoteFilter: true,
                proxy: {
                    type: 'ajax',
                    url: '");
#nullable restore
#line 22 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Students\Index.cshtml"
                     Write(Url.Action("Index", "Students"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                    reader: {
                        type: 'json',
                        rootProperty: 'data',
                        totalProperty: 'total'
                    }
                }
            });


            var prevSettings = {};
            try {
                var prevSettingString = JSON.parse(localStorage.getItem(""StudentsFilters"") || ""[]"");

                for (var i = 0; i < prevSettingString.length; i++) {
                    prevSettings[prevSettingString[i][""property""]] = prevSettingString[i][""value""];
                }
            } catch (err) {

            }

            var filtersWnd = null;
            var setFilters = function() {
                var settings = [
                    { property: 'name', value: filtersWnd.getComponent(""name"").getValue() },
                    { property: 'status', value: filtersWnd.getComponent(""status"").getValue() },
                    { property: 'groupName', value: filtersWnd.getComponent(""groupName"").g");
                WriteLiteral(@"etValue() }
                ];
                store.setFilters(settings);
                localStorage.setItem(""StudentsFilters"", JSON.stringify(settings));
            };

            var postCmbx = Ext.create('Ext.form.ComboBox',
            {

            });

            filtersWnd = Ext.create('Ext.window.Window',
            {
                title: ""Фильтры"",
                closeAction: 'hide',
                resizable: false,
                autoHeight: true,
                bodyPadding: 6,
                defaults: {
                    xtype: 'textfield',
                    width: 500
                },
                items: [
                    { fieldLabel: ""ФИО"", itemId: ""name"", value: prevSettings[""name""] },
                    { fieldLabel: ""Группа"", itemId: ""groupName"", value: prevSettings[""groupName""] },
                    {
                        xtype: 'combobox',
                        fieldLabel: ""Статус"",
                        store: Ext.create('Ext");
                WriteLiteral(".data.Store\',\r\n                        {\r\n                            fields: [\'status\'],\r\n                            data: ");
#nullable restore
#line 79 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Students\Index.cshtml"
                             Write(Html.Raw(Json.Encode(ViewBag.statusTypes)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@",
                        }),
                        displayField: 'status',
                        value: prevSettings[""status""],
                        valueField: 'status',
                        itemId: 'status',
                        mode: 'local',
                        //editable: false,
                        //disableKeyFilter: false
                    }
                ],
                buttons: [
                    {
                        text: ""OK"",
                        handler: function() {
                            setFilters();
                            filtersWnd.hide();
                        }
                    },
                    {
                        text: ""Отмена"",
                        handler: function() { filtersWnd.hide(); }
                    }
                ]
            });

            setFilters();


            var gridPanel = Ext.create('Ext.grid.Panel',
            {
                region: 'center',
          ");
                WriteLiteral(@"      store: store,
                tbar: [
                    {
                        xtype: 'button',
                        text: 'Фильтры...',
                        handler: function() { filtersWnd.show(); }
                    },
                    {
                        xtype: 'button',
                        text: ""Отменить фильтры"",
                        handler: function() {
                            localStorage.setItem(""StudentsFilters"", []);
                            store.clearFilter();
                        }
                    }
                ],
                loadMask: true,
                columns: [
                    { xtype: 'rownumberer', width: 50 },
                    {
                        header: 'ФИО',
                        dataIndex: 'name',
                        width: 400,
                        renderer: function(value, metaData, record) {
                            return '<a href=""");
#nullable restore
#line 135 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Students\Index.cshtml"
                                        Write(Url.Action("Student", "PersonalInfo"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"?studentId=' +
                                record.data.id +
                                '"">' +
                                value +
                                '</a>';
                        }
                    },
                    {
                        header: 'Статус',
                        dataIndex: 'status',
                        width: 200,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
                    {
                        header: 'Название группы',
                        dataIndex: 'groupName',
                        width: 200,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
                    {
                        header: 'Рейтинг',
                        dataIndex: 'rating',
                        width: 100,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
                    {
                    ");
                WriteLiteral("    header: \'Секции ФК\',\r\n                        dataIndex: \'name\',\r\n                        width: 150,\r\n                        renderer: function(value, metaData, record) {\r\n                            return \'<a href=\"");
#nullable restore
#line 165 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Students\Index.cshtml"
                                        Write(Url.RouteUrl("frm", null, "https"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\\\\fk?studentId=\' +\r\n                                record.data.id +\r\n                                \'\">Секции ФК</a>\';\r\n                        }\r\n                    }\r\n");
#nullable restore
#line 170 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Students\Index.cshtml"
                     if (User.IsInRole(ItsRoles.SportsmanSetting))
                    {
                        

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                            , {
                                header: 'Спортсмен',
                                dataIndex: 'Sportsman',
                                width: 130,
                                xtype: 'checkcolumn',

                                listeners: {
                                    beforecheckchange: function(column, recordIndex, sportsman) {
                                        var record = store.getAt(recordIndex);
                                        var studentId = record.get('id');

                                        Ext.Ajax.request({
                                            url: '/Students/SetSportsman',
                                            method: 'POST',
                                            params: {
                                                studentId: studentId,
                                                Sportsman: sportsman
                                            },
                                 ");
                WriteLiteral(@"           success: function(response) {
                                                var data = Ext.decode(response.responseText);
                                                record.set(""Sportsman"", sportsman);
                                                store.load();
                                                /*if (response.status === 200)
                                                    record.commit();
                                                else
                                                    record.reject();*/
                                                if (data.msg && data.msg.length > 0) {
                                                    Ext.MessageBox.show({
                                                        title: 'Информационное сообщение',
                                                        msg: data.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                   ");
                WriteLiteral(@"     icon: Ext.MessageBox.INFO
// иконка мб {ERROR,INFO,QUESTION,WARNING}
                                                        //width:300,                       // есть еще minWidth
                                                        //closable:false,                  // признак наличия икнки закрытия окна
                                                    });
                                                }

                                            }
                                        });
                                    }
                                }
                            }
                        ");
#nullable restore
#line 216 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Students\Index.cshtml"
                               
                    }

#line default
#line hidden
#nullable disable
                WriteLiteral(@",
                    {
                         header: 'Практики',
                         dataIndex: 'name',
                         width: 150,
                         renderer: function(value, metaData, record) {
                             return '<a href=""");
#nullable restore
#line 223 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Students\Index.cshtml"
                                         Write(Url.RouteUrl("frm", null, "https"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"\\practice\\student?Id=' +
                             //return '<a href=""http://localhost:60087/practice/student?Id=' +
                                record.data.id +
                                '"">Практики</a>';
                         }
                    },
                    {
                         header: 'Проектное обучение',
                         dataIndex: 'name',
                         width: 200,
                         renderer: function(value, metaData, record) {
                             return '<a href=""");
#nullable restore
#line 234 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Students\Index.cshtml"
                                         Write(Url.RouteUrl("frm", null, "https"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"\\project\\student?Id=' +
                                record.data.id +
                                '"">Проектное обучение</a>';
                         }
                    }
                ]
            });

            var items = [
                gridPanel
            ];

            Urfu.createViewport('border', items);
        });
</script>
");
            }
            );
            WriteLiteral("\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
