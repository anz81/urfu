#pragma checksum "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4383f119c03a7bd981714c59551b7c5372fd8295"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_AreaEducation_Index), @"mvc.1.0.view", @"/Views/AreaEducation/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\_ViewImports.cshtml"
using Urfu.Its.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\_ViewImports.cshtml"
using Urfu.Its.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4383f119c03a7bd981714c59551b7c5372fd8295", @"/Views/AreaEducation/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"571aa92c4ca967469f2915635495580dde4274ca", @"/Views/_ViewImports.cshtml")]
    public class Views_AreaEducation_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
  
    ViewBag.Title = "Справочник Области образования";
    Layout = "~/Views/Shared/_ExtLayout.cshtml";

#line default
#line hidden
#nullable disable
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">

        Ext.onReady(function () {
            Ext.tip.QuickTipManager.init();

            function parseJson(json) {
                var data = JSON.parse(json.replace(/&quot;/g, '""'));
                return data;
            }

            var dataQualifications = parseJson('");
#nullable restore
#line 17 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                           Write(ViewBag.Qualifications);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"');
            var qualificationsStore = Ext.create(""Ext.data.Store"",
            {
                data: dataQualifications
            });

            var store = Ext.create(""Ext.data.Store"",
                {
                    autoLoad: true,
                    remoteSort: true,
                    remoteFilter: true,
                    pageSize: 300,
                    proxy: {
                        type: 'ajax',
                        url: window.location.pathname,
                        reader: {
                            type: 'json',
                            rootProperty: 'data',
                            totalProperty: 'total'
                        }
                    },
                    listeners: {
                        load: function (t, records, successful, operation, eOpts) {

                            var _records = records;
                            _records.forEach(function (item, index, array) {
                                item.dat");
                WriteLiteral(@"a.Orders.forEach(function (item2, index2, array2) {
                                    if (item2.Date != '') {
                                        var dateArr = item2.Date.split('.');
                                        var correctDate = dateArr[1] + '/' + dateArr[0] + '/' + dateArr[2];
                                        records[index].data.Orders[index2].Date = correctDate;
                                    }
                                });
                            });
                        }
                    }
                });
            
            function createEditWindow(id, record) {
                return Ext.create('Ext.window.Window',
                    {
                        title: ""Область образования"",
                        closeAction: 'hide',
                        resizable: false,
                        x: 100,
                        y: 100,
                        autoHeight: true,
                        width: 450,
           ");
                WriteLiteral(@"             modal: true,
                        bodyPadding: 6,
                        rowHeight: 100,
                        viewModel: {
                            data: Ext.apply({}, record ? record.data : {})
                        },
                        items: {
                            xtype: 'form',
                            items: [
                                {
                                    xtype: 'textfield',
                                    name: 'Code',
                                    fieldLabel: 'Код',
                                    bind: '{Code}',
                                    allowBlank: false,
                                    editable: true,
                                    width: 400
                                },
                                {
                                    xtype: 'textarea',
                                    name: 'Title',
                                    fieldLabel: 'Название',
        ");
                WriteLiteral(@"                            bind: '{Title}',
                                    allowBlank: false,
                                    editable: true,
                                    width: 400
                                }
                            ],
                            buttons: [
                            {
                                text: ""Сохранить"",
                                hidden: '");
#nullable restore
#line 96 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                    Write(ViewBag.CanEdit);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' == 'False',
                                handler: function () {
                                    var window = this.up('window');
                                    var form = window.down('form');
                                    
                                    var isValid = true;
                                    form.items.items.forEach(function (element, index, array) {
                                        if (!element.isValid()) isValid = false;
                                    });
                                    if (!isValid) {
                                        return;
                                    }
                                  
                                    Ext.Ajax.request({
                                        url: '");
#nullable restore
#line 110 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                         Write(Url.Action("Update"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                        params: {
                                            id: id,
                                            code: form.items.items.find(p => p.name == ""Code"").getValue(),
                                            title: form.items.items.find(p => p.name == ""Title"").getValue(),
                                        },
                                        success: function (response) {
                                            if (response.responseText != """") {
                                                var data = Ext.decode(response.responseText);
                                                if (data.success) {
                                                    Ext.MessageBox.show({
                                                        title: 'Уведомление',
                                                        msg: data.message,
                                                        buttons: Ext.MessageBox.OK
                        ");
                WriteLiteral(@"                            });
                                                    window.close();
                                                    store.reload();
                                                }
                                                else {
                                                    Ext.MessageBox.show({
                                                        title: 'Ошибка',
                                                        msg: data.message,
                                                        buttons: Ext.MessageBox.OK
                                                    });
                                                }
                                            }
                                        },
                                        failure: function (response) {
                                            Ext.MessageBox.show({
                                                title: 'Информационное сообщение',
               ");
                WriteLiteral(@"                                 msg: 'Ошибка',
                                                buttons: Ext.MessageBox.OK
                                            });
                                        }
                                    });
                                }
                            },
                            {
                                text: ""Отмена"",
                                hidden: '");
#nullable restore
#line 149 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                    Write(ViewBag.CanEdit);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' == 'False',
                                handler: function () {
                                    var window = this.up('window');
                                    window.close();
                                }
                            }
                        ]
                        }
                    })
            };

            function createAddOrderWindow(id, record) {
                return Ext.create('Ext.window.Window',
                    {
                        title: ""Приказы"",
                        closeAction: 'hide',
                        overflowY: 'auto',
                        resizable: true,
                        x: 100,
                        y: 100,
                        autoHeight: true,
                        width: 800,
                        modal: true,
                        bodyPadding: 6,
                        rowHeight: 100,
                        viewModel: {
                            data: Ext.apply({}, record");
                WriteLiteral(@" ? record.data : {}),
                            stores: {
                                ordersStore: {
                                    data: record.data.Orders
                                },
                            }
                        },
                        items: {
                            xtype: 'form',
                            items: [
                                {
                                    xtype: 'button',
                                    text: 'Добавить',
                                    hidden: '");
#nullable restore
#line 188 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                        Write(ViewBag.CanEdit);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' == 'False',
                                    handler: function () {
                                        var ordersStore2 = this.lookupViewModel().getStore('ordersStore');
                                        ordersStore2.add({ OrderId: '-1', Number: '', Date: '' });
                                    }
                                },
                                Ext.create('Ext.grid.Panel', {
                                    name: 'orderTable',
                                    region: 'center',
                                    bind: {
                                        store: '{ordersStore}'
                                    },
                                    loadMask: true,
                                    width: 800,
                                    columnLines: true,
                                    margin: '10 0 0 0',
                                    plugins: [{
                                        ptype: 'cellediting',
              ");
                WriteLiteral(@"                          clicksToEdit: 1
                                    }],
                                    columns: [
                                        {
                                            header: 'Номер приказа',
                                            dataIndex: 'Number',
                                            width: 200,
                                            cellWrap: true,
                                            editor: {
                                                xtype: 'textfield'
                                            },
                                        },
                                        {
                                            xtype: 'datecolumn',
                                            dataIndex: 'Date',
                                            header: 'Дата',
                                            sortable: false,
                                            width: 160,
                           ");
                WriteLiteral(@"                 format: 'd/m/Y',
                                            editor: {
                                                xtype: 'datefield',
                                                startDay: 1,
                                                format: 'd/m/Y'
                                            }
                                        },
                                        {
                                            dataIndex: 'Qualification',
                                            header: 'Уровень обучения',
                                            sortable: false,
                                            width: 250,
                                            editor: {
                                                xtype: 'combobox',
                                                editable: false,
                                                store: qualificationsStore,
                                                allowBlank: false,
     ");
                WriteLiteral(@"                                           valueField: 'Name',
                                                displayField: 'Name',
                                                listeners: {
                                                    'select': function (combo, records, eOpts) {
                                                        combo.value = records.data.Name;
                                                    },
                                                }
                                            },
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            resizable: false,
                                            sortable: false,
                                            hidden: '");
#nullable restore
#line 254 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                                Write(ViewBag.CanEdit);

#line default
#line hidden
#nullable disable
                WriteLiteral("\' == \'False\',\r\n                                            width: 50,\r\n                                            items: [\r\n                                                {\r\n                                                    icon: \'");
#nullable restore
#line 258 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                                      Write(Url.Content("/Content/Images/remove.png"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                                    iconCls: 'icon-padding',
                                                    tooltip: 'Удалить',

                                                    handler: function (grid, rowIndex, colIndex, item, e, record) {
                                                        var ordersStore2 = this.lookupViewModel().getStore('ordersStore');
                                                        ordersStore2.remove(record);
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                })
                            ]
                        },
                        buttons: [
                            {
                                text: ""Сохранить"",
                                hidden: '");
#nullable restore
#line 276 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                    Write(ViewBag.CanEdit);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' == 'False',
                                handler: function () {
                                    var window = this.up('window');
                                                
                                    var orders = this.lookupViewModel().getStore('ordersStore').data.items.filter(o => o.data.Number.trim() != '').map(function (elem) {
                                        var correctDate = elem.data.Date;
                                        if (correctDate != '') {
                                            try { // ранее введенные даты имеют тип строки 
                                                var dateArr = correctDate.split('/');
                                                var correctDate = dateArr[1] + '/' + dateArr[0] + '/' + dateArr[2];
                                            }
                                            catch{}
                                        }

                                        return {
                               ");
                WriteLiteral(@"             Id: elem.data.OrderId,
                                            Date: correctDate,
                                            Number: elem.data.Number,
                                            AreaEducationId: id,
                                            QualificationName: elem.data.Qualification
                                        };
                                    });
                                    
                                    Ext.Ajax.request({
                                        url: '");
#nullable restore
#line 300 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                         Write(Url.Action("UpdateOrders"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"/' + id,
                                        method: 'POST',
                                        headers: { 'Content-Type': 'application/json' },
                                        params: Ext.JSON.encode(orders),
                                        success: function (response) {
                                            store.reload();
                                            window.close();
                                        },
                                        failure: function (response) {
                                            Ext.MessageBox.show({
                                                title: 'Информационное сообщение',
                                                msg: 'Ошибка',
                                                buttons: Ext.MessageBox.OK
                                            });
                                        }
                                    });
                                }
                        ");
                WriteLiteral("    },\r\n                            {\r\n                                text: \"Отмена\",\r\n                                hidden: \'");
#nullable restore
#line 320 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                    Write(ViewBag.CanEdit);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' == 'False',
                                handler: function () {
                                    var window = this.up('window');

                                    Ext.MessageBox.show({
                                        title: 'Уведомление',
                                        msg: ""Изменения не сохранены. Выйти?"",
                                        buttons: Ext.MessageBox.YESNO,
                                        fn: function (btn) {
                                            if (btn === 'yes') {
                                                window.close();
                                            }
                                        },
                                        icon: Ext.MessageBox.QUESTION
                                    });
                                }
                            }
                        ]
                    })
            };
            
            var gridPanel = Ext.create('Ext.grid.Panel',
       ");
                WriteLiteral(@"         {
                    region: 'center',
                    store: store,
                    loadMask: true,
                    columnLines: true,
                    tbar: [
                        {
                            xtype: 'button',
                            text: 'Добавить',
                            hidden: '");
#nullable restore
#line 351 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                Write(ViewBag.CanEdit);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' == 'False',
                            handler: function () { createEditWindow('-1', {}).show(); }
                        }
                    ],
                    columns: [
                        { xtype: 'rownumberer', width: 50 },
                        {
                            header: 'Код',
                            dataIndex: 'Code',
                            width: 100,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'Название',
                            dataIndex: 'Title',
                            width: 300,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'Приказы',
                            dataIndex: 'OrdersStr',
                            width: 400,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
  ");
                WriteLiteral("                      },\r\n                        {\r\n                            xtype: \'actioncolumn\',\r\n                            resizable: false,\r\n                            sortable: false,\r\n                            hidden: \'");
#nullable restore
#line 379 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                Write(ViewBag.CanEdit);

#line default
#line hidden
#nullable disable
                WriteLiteral("\' == \'False\',\r\n                            width: 100,\r\n                            items: [\r\n                                {\r\n                                    icon: \'");
#nullable restore
#line 383 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                      Write(Url.Content("/Content/Images/edit.png"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                    iconCls: 'icon-padding',
                                    tooltip: 'Редактировать',
                                    handler: function (grid, rowIndex, colIndex, item, e, record) {
                                        var rec = grid.getStore().getAt(rowIndex);
                                        createEditWindow(rec.get('Id'), rec).show();
                                    }
                                },
                                {
                                    icon: '");
#nullable restore
#line 392 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                      Write(Url.Content("/Content/Images/document-add2.png"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                    iconCls: 'icon-padding',
                                    tooltip: 'Добавить приказ',
                                    handler: function (grid, rowIndex, colIndex, item, e, record) {
                                        var rec = grid.getStore().getAt(rowIndex);
                                        createAddOrderWindow(rec.get('Id'), rec).show();
                                    }
                                },
                                {
                                    icon: '");
#nullable restore
#line 401 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                      Write(Url.Content("/Content/Images/remove.png"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                    iconCls: 'icon-padding',
                                    tooltip: 'Удалить',

                                    handler: function (grid, rowIndex, colIndex, item, e, record) {

                                        Ext.MessageBox.show({
                                            title: 'Уведомление',
                                            msg: ""Удалить запись?"",
                                            buttons: Ext.MessageBox.YESNO,
                                            fn: function (btn) {
                                                if (btn === 'yes') {
                                                    Ext.Ajax.request({
                                                        method: 'GET',
                                                        url: '");
#nullable restore
#line 415 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\AreaEducation\Index.cshtml"
                                                         Write(Url.Action("Remove"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                                        success: function(response) {
                                                            Ext.MessageBox.show({
                                                                title: 'Информационное сообщение',
                                                                msg: 'Запись удалена успешно',
                                                                buttons: Ext.MessageBox.OK
                                                            });
                                                            store.reload();
                                                        },
                                                        failure: function(d) {
                                                            Ext.MessageBox.show({
                                                                title: 'Ошибка',
                                                                msg: 'Удаление невозможно. Существуют направления в");
                WriteLiteral(@" этой области образования',
                                                                buttons: Ext.MessageBox.OK
                                                            });
                                                        },
                                                        params: { id: record.get('Id') }
                                                    });
                                                }
                                            }
                                        });
                                    }
                                }
                            ]
                        }
                    ]
                });

            var items = [
                gridPanel
            ];

            Urfu.createViewport('border', items);

        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
