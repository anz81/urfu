#pragma checksum "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\ForeignLanguageSubgroupMeta\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e94910cfc1e527117fa7e97e551f4fd925602197"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ForeignLanguageSubgroupMeta_Index), @"mvc.1.0.view", @"/Views/ForeignLanguageSubgroupMeta/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\_ViewImports.cshtml"
using Urfu.Its.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\_ViewImports.cshtml"
using Urfu.Its.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e94910cfc1e527117fa7e97e551f4fd925602197", @"/Views/ForeignLanguageSubgroupMeta/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"571aa92c4ca967469f2915635495580dde4274ca", @"/Views/_ViewImports.cshtml")]
    public class Views_ForeignLanguageSubgroupMeta_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Urfu.Its.Web.DataContext.ForeignLanguageCompetitionGroup>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\ForeignLanguageSubgroupMeta\Index.cshtml"
  
    ViewBag.Title = String.Format("Количество подгрупп для конкурсной группы {0}, {1} семестр, {2}", Model.Name,Model.Semester.Name.ToLower(),Model.Year);
    Layout = "~/Views/Shared/_ExtLayout.cshtml";
    var filterName = "ForeignLanguageMetaSubgroupsFilters";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    <script type=\"text/javascript\">\r\n    Ext.onReady(function () {\r\n        Ext.tip.QuickTipManager.init();\r\n\r\n\r\n        var prevSettings = {};\r\n        try {\r\n            var prevSettingString = JSON.parse(localStorage.getItem(\"");
#nullable restore
#line 17 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\ForeignLanguageSubgroupMeta\Index.cshtml"
                                                                Write(filterName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""") || ""[]"");

            for (var i = 0; i < prevSettingString.length; i++) {
                prevSettings[prevSettingString[i][""property""]] = prevSettingString[i][""value""];
            }
        } catch (err) {

        }

        var store = Ext.create(""Ext.data.BufferedStore"",
            {
                idProperty: 'Id',
                fields: [""Id"",  ""title"", ""discipline"", ""tmer"", ""admission"", ""count""],
                autoLoad: true,
                pageSize: 300,
                remoteSort: true,
                remoteFilter: true,
                proxy: {
                    type: 'ajax',
                    url: '/ForeignLanguageSubgroupMeta/Index?competitionGroupId='+");
#nullable restore
#line 36 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\ForeignLanguageSubgroupMeta\Index.cshtml"
                                                                             Write(Model.Id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@",
                        reader: {
                            type: 'json',
                            rootProperty: 'data',
                            totalProperty: 'total'
                        }
                    }
            });


        var filtersWnd = null;

        var setFilters = function () {
            var settings = [
                { property: 'title', value: filtersWnd.getComponent(""title"").getValue() },
                { property: 'discipline', value: filtersWnd.getComponent(""discipline"").getValue() },
                { property: 'count', value: filtersWnd.getComponent(""count"").getValue() }
            ];
            store.setFilters(settings);
            localStorage.setItem(""");
#nullable restore
#line 55 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\ForeignLanguageSubgroupMeta\Index.cshtml"
                             Write(filterName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""", JSON.stringify(settings));
        };
        filtersWnd = Ext.create('Ext.window.Window', {
            title: ""Фильтры"",
            closeAction: 'hide',
            resizable: false,
            autoHeight: true,
            bodyPadding: 6,
            defaults: {
                xtype: 'textfield',
                width: 500
            },
            items: [
                { fieldLabel: ""Модуль"", itemId: ""title"", value: prevSettings[""title""] },
                { fieldLabel: ""Дисциплина"", itemId: ""discipline"", value: prevSettings[""discipline""] },
                { fieldLabel: ""Количество"", itemId: ""count"", value: prevSettings[""count""] }
            ],
            buttons: [
                {
                    text: ""OK"",
                    handler: function () {
                        setFilters();
                        filtersWnd.hide();
                    }
                },
                {
                    text: ""Отмена"",
                    handler: functio");
                WriteLiteral("n () { filtersWnd.hide(); }\r\n                }\r\n            ]\r\n        });\r\n        setFilters();\r\n        var tpl = \'<a href=\"/ForeignLanguageSubgroupMeta/Edit?id={Id}&competitionGroupId=");
#nullable restore
#line 87 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\ForeignLanguageSubgroupMeta\Index.cshtml"
                                                                                    Write(Model.Id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""">Редактировать</a> ';

            var gridPanel = Ext.create('Ext.grid.Panel',
                {
                    region: 'center',
                    store: store,
                    loadMask: true,
                    tbar: [
                        {
                            xtype: 'button',
                            text: 'Фильтры...',
                            handler: function () { filtersWnd.show(); }
                        },
                        {
                            xtype: 'button',
                            text: ""Отменить фильтры"",
                            handler: function() {
                                store.clearFilter();
                                localStorage.setItem(""");
#nullable restore
#line 105 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\ForeignLanguageSubgroupMeta\Index.cshtml"
                                                 Write(filterName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""", ""[]"");
                            }
                        },
                        {
                            xtype: 'button',
                            text: ""Подгруппы"",
                            handler: function () { window.location = ""/ForeignLanguageSubgroup/Index?competitionGroupId=");
#nullable restore
#line 111 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\ForeignLanguageSubgroupMeta\Index.cshtml"
                                                                                                                   Write(Model.Id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"""; }
                        }
                    ],
                    columns: [
                        { xtype: 'rownumberer', width: 50 },
                        {
                            header: 'Модуль',
                            dataIndex: 'title',
                            width: 300,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'Дисциплина',
                            dataIndex: 'discipline',
                            width: 200,
                            renderer: Ext.util.Format.htmlEncode
                        },
                        {
                            header: 'Нагрузка',
                            align: 'center',
                            dataIndex: 'tmer',
                            renderer: Ext.util.Format.htmlEncode,
                            width: 180
                        },
                        {
        ");
                WriteLiteral(@"                    header: 'Зачислено',
                            align: 'center',
                            dataIndex: 'admission',
                            renderer: Ext.util.Format.htmlEncode,
                            width: 180
                        },
                        {
                            header: 'Количество групп',
                            align: 'center',
                            dataIndex: 'count',
                            renderer: Ext.util.Format.htmlEncode,
                            width: 180
                        },
                       {
                            xtype: 'templatecolumn',
                            tpl: tpl,
                            sortable: false,
                            width: 470
                        }
                    ]
                });

            var items = [
                gridPanel
            ];

            Urfu.createViewport('border', items);
            gridPanel.getStore().");
                WriteLiteral("on(\'load\', function (store, records, options) {\r\n                var focus = \'");
#nullable restore
#line 164 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\ForeignLanguageSubgroupMeta\Index.cshtml"
                        Write(ViewBag.Focus);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
                if (focus && focus.length > 0) {

                    var focusRow = store.findExact('Id', parseInt(focus));
                    if (focusRow >= 0) {
                        var rowData = store.getAt(focusRow);
                        gridPanel.getView().focusRow(rowData);
                        gridPanel.getSelectionModel().select(rowData);
                    }
                }
                return false;
            });
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Urfu.Its.Web.DataContext.ForeignLanguageCompetitionGroup> Html { get; private set; }
    }
}
#pragma warning restore 1591
