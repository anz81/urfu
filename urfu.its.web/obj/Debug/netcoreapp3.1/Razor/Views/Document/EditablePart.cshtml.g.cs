#pragma checksum "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ca0a49a9b3808118dd29c9f50468687e041aa706"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Document_EditablePart), @"mvc.1.0.view", @"/Views/Document/EditablePart.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\_ViewImports.cshtml"
using Urfu.Its.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
using Urfu.Its.VersionedDocs.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
using Urfu.Its.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ca0a49a9b3808118dd29c9f50468687e041aa706", @"/Views/Document/EditablePart.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"571aa92c4ca967469f2915635495580dde4274ca", @"/Views/_ViewImports.cshtml")]
    public class Views_Document_EditablePart : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Urfu.Its.VersionedDocs.ViewModels.DocumentPartViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/VersionedDocs/versionedDocs.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/JSON.sortify.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 6 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
  
    ViewBag.Title = Model.DetailedDisplayName;
    Layout = "~/Views/Shared/_ExtLayout.cshtml";

    var canEdit = Model.GetIsEditable();

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    .block {
        margin-bottom: 15px
    }

    label {
        font-weight: normal
    }

    .multiline-column {
        min-height: 100px;        
    }

    .multiline-column .x-grid-cell-inner {
        white-space: pre-wrap;
        /*padding: 0*/
    }

    .widget-column .x-grid-cell-inner {
        padding: 1px
    }

    .x-grid-cell-editor {
        background: white;
    }

    /*https://tpodolak.com/blog/2013/06/30/extjs-vertical-header-in-grid/*/
    .v-vertical-header-grid .x-column-header.column-header-vertical .x-column-header-text {
        display: block;
        margin-left: auto;
        margin-right: auto;
        text-align: left;
        -webkit-transform: rotate(-90deg);
        -moz-transform: rotate(-90deg);
        -o-transform: rotate(-90deg);
        -ms-transform: rotate(-90deg); /* IE  */
    }

    /*.v-vertical-header-grid .x-column-header.header-column-vertical {
        background-image: -ms-linear-gradient(rgb(249, 249, ");
            WriteLiteral(@"249), rgb(227, 228, 230)) !important;
        filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr='#F9F9F9', endColorstr='#E3E4E6');
    }

    .v-vertical-header-grid .x-grid-header-ct .header-column-vertical {
        background-image: -ms-linear-gradient(rgb(249, 249, 249), rgb(227, 228, 230)) !important;
        filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr='#F9F9F9', endColorstr='#E3E4E6');
    }*/

    .table-cell-padding-normal td {
        padding: 6px
    }

    .table-all-borders td {
        border: 1px solid gray;
    }

    .grid-header-minimal .x-column-header-inner {
        padding: 4px 1px 4px 1px;
        font-size: 11px;
        font-weight: 0
    }

    .grid-body-minimal td .x-grid-cell-inner {
        font-size: 14px;
        padding: 3px
    }

    .grouped-list .x-boundlist-item {
        padding: 1px 3px 0 10px;
    }
    .grouped-list .group-header {
        padding: 4px;
        font-weigh");
            WriteLiteral("t: bold;\r\n        border-bottom: 1px solid #ddd;\r\n    }\r\n</style>\r\n\r\n");
            WriteLiteral("\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ca0a49a9b3808118dd29c9f50468687e041aa7066928", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ca0a49a9b3808118dd29c9f50468687e041aa7068027", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                BeginAddHtmlAttributeValues(__tagHelperExecutionContext, "src", 3, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                AddHtmlAttributeValue("", 3228, "~/Scripts/VersionedDocs/", 3228, 24, true);
#nullable restore
#line 121 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
AddHtmlAttributeValue("", 3252, PreparePath(Model), 3252, 21, false);

#line default
#line hidden
#nullable disable
                AddHtmlAttributeValue("", 3273, ".js", 3273, 3, true);
                EndAddHtmlAttributeValues(__tagHelperExecutionContext);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ca0a49a9b3808118dd29c9f50468687e041aa7069674", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    \r\n    <script>\r\n        var data = ");
#nullable restore
#line 125 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
              Write(Html.Raw(ViewBag.DataString));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n        var documentId = ");
#nullable restore
#line 126 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
                    Write(Model.DocumentId);

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n        var documentType = ");
#nullable restore
#line 127 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
                       Write((int) Model.DocumentType);

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n        var schema = ");
#nullable restore
#line 128 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
                Write(Html.Raw(JsonConvert.SerializeObject(ViewBag.Schema)));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n        var emptyData = ");
#nullable restore
#line 129 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
                   Write(Html.Raw(JsonConvert.SerializeObject(ViewBag.EmptyData)));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n        var user = { login: \'");
#nullable restore
#line 130 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
                        Write(Html.Raw(User.Identity.Name));

#line default
#line hidden
#nullable disable
                WriteLiteral("\' };\r\n        var additionalData = {};\r\n        var saveUrl = \'");
#nullable restore
#line 132 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
                  Write(Url.Action("Save"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\' + window.location.search;\r\n");
#nullable restore
#line 133 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
         if (ViewBag.AdditionalData != null)
        {
            

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n            additionalData = ");
#nullable restore
#line 136 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
                        Write(Html.Raw(JsonConvert.SerializeObject(ViewBag.AdditionalData)));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n            ");
#nullable restore
#line 137 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
                   
        }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n        var canEdit = ");
#nullable restore
#line 140 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
                  Write(canEdit ? "true" : "false");

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
        data.canEdit = canEdit;
        data.isBusy = false; // Какая-то критичная операция выполняется. Нужно дизейблить часть функциональности.

        Ext.onReady(function() {
            Ext.tip.QuickTipManager.init();

            var uiEx;
            if (window.uiInit) {
                uiEx = uiInit(documentId, documentType, data, schema, emptyData, canEdit, user, additionalData);
                Ext.applyIf(uiEx.viewModel || {}, {
                    data: data,
                    showMessage: function(msg) {
                        alert(msg);
                    },
                    confirmMessage: function(msg) {
                        return confirm(msg);
                    }
                });
            } else {
                uiEx = {
                    items: {
                        xtype: 'container',
                        autoEl: {
                            html: '<b style=""color: red"">Раздел еще не реализован</b>'
                        }
      ");
                WriteLiteral("              }\r\n                };\r\n            }\r\n\r\n            var goToSections = function () {\r\n                window.location.assign(\'");
#nullable restore
#line 171 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
                                   Write(Url.Action("Index", new {id = Model.DocumentId, moduleId = Request.QueryString["moduleId"]}));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"');
            }

            var root = Ext.merge({
                itemId: 'rootPanel',
                canEdit: canEdit,
                xtype: 'panel',
                controller: 'versioneddocument',
                documentId: documentId,
                saveUrl: saveUrl,
                bodyPadding: 10,
                autoScroll: true,
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                defaults: {
                    xtype: 'block'
                },
                buttons: [{
                    xtype: 'button',
                    itemId: 'goToSectionList',
                    bind: {
                        disabled: '{isBusy}'
                    },
                    text: 'Вернуться к разделам',
                    handler: function (btn) {
                        //goToSections();
                        var hasChanges = Ext.ComponentQuery.query('block').some(function(b) {
          ");
                WriteLiteral(@"                  var hasChanges = b.detectChanges();
                            return hasChanges;
                        });
                        if (hasChanges && canEdit) {
                            Ext.MessageBox.show({
                                title: 'Внимание',
                                msg: 'У Вас не сохранен раздел. Сохранить?',
                                width: 400,
                                modal: true,
                                buttons: Ext.MessageBox.YESNOCANCEL,
                                buttonText: {
                                    yes: ""Сохранить"",
                                    no: ""Не сохранять"",
                                    cancel: 'Отмена'
                                },
                                fn: function (answer) {
                                    if (answer === ""yes"")
                                        saveBlocks(saveUrl, findRootVm(Ext.ComponentQuery.query('#rootPanel')[0]), Ext.ComponentQue");
                WriteLiteral(@"ry.query('block'), 'Сохранение раздела выполнено', goToSections);
                                    else if(answer === ""no"")
                                        goToSections();
                                }
                            });
                        }
                        else {
                            goToSections();
                        }
                    }
                }, {
                    xtype: 'button',
                    itemId: 'saveSection',
                    text: 'Сохранить раздел',
                    bind: {
                        disabled: '{isBusy}'
                    },
                    hidden: !canEdit
                }]
            },
            uiEx,
            {
                listeners: Ext.merge({
                    beforerender: function() {
                        if (!canEdit) {
                            Ext.ComponentQuery.query('button').forEach(function (c) { c.setDisabled(true); });
                 ");
                WriteLiteral(@"           Ext.ComponentQuery.query('button#goToSectionList').forEach(function(c) {
                                c.setDisabled(false);
                            });
                            Ext.ComponentQuery.query('block button#saveBlock').forEach(function(c) {
                                c.setHidden(true);
                            });
                            Ext.ComponentQuery.query('.field, filefield').forEach(function(c) {
                                c.setReadOnly(true);
                                if (c.setEditable)
                                    c.setEditable(false);
                            });

                            Ext.ComponentQuery.query('grid actioncolumn').forEach(function (c) { c.setHidden(true); });
                            Ext.ComponentQuery.query('grid checkcolumn').forEach(function (c) { c.setDisabled(true); });
                        }
                    }
                }, uiEx.listeners || {})
            });

            U");
                WriteLiteral("rfu.createViewport(\'fit\', [root]);\r\n        });\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
#nullable restore
#line 90 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Document\EditablePart.cshtml"
            

    string PreparePath(DocumentPartViewModel model)
    {
        var chain = new List<DocumentPartViewModel>();

        var part = model;
        while (part.Parent != null)
        {
            chain.Add(part);
            part = part.Parent;
        }
        chain.Add(part);

        chain.Reverse();

        var path = string.Join("/", chain.Select(c => c.SystemName));
        
        if (!File.Exists(Server.MapPath("~/Scripts/VersionedDocs/" + path + ".js")))
        {
            // Если файл не найден, считаем, что он должен быть в shared папке
            path = "Shared/" + model.SystemName;
        }

        return path;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Urfu.Its.VersionedDocs.ViewModels.DocumentPartViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
