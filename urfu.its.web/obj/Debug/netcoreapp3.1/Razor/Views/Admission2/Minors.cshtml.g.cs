#pragma checksum "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Admission2\Minors.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1531b52cacbb688d9d534a0bf068e745f1376e6d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admission2_Minors), @"mvc.1.0.view", @"/Views/Admission2/Minors.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\_ViewImports.cshtml"
using Urfu.Its.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\_ViewImports.cshtml"
using Urfu.Its.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1531b52cacbb688d9d534a0bf068e745f1376e6d", @"/Views/Admission2/Minors.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"571aa92c4ca967469f2915635495580dde4274ca", @"/Views/_ViewImports.cshtml")]
    public class Views_Admission2_Minors : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Admission2\Minors.cshtml"
  
    ViewBag.Title = "Зачисление на майноры";
    Layout = "~/Views/Shared/_ExtLayout.cshtml";

#line default
#line hidden
#nullable disable
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    <script type=\"text/javascript\">\r\n\r\n        var filterName = \"MinorsForAdmissionsFilters\";\r\n\r\n        function downloadReport() {\r\n            var fileUrl = \'");
#nullable restore
#line 12 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Admission2\Minors.cshtml"
                      Write(Url.Action("DownloadMinorModulesReport"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'
                .concat('?filter=' + encodeURIComponent(localStorage.getItem(filterName) || ""[]""));
            window.location.href = fileUrl;
            return false;
        }

        Ext.onReady(function () {
            Ext.tip.QuickTipManager.init();

            Ext.define('ComboBoxModel', {
                extend: 'Ext.data.Model',
                fields:
                [
                    { type: 'string', name: 'Id' },
                    { type: 'string', name: 'Name' }
                ]
            });

            var SemestersStore = Ext.create('Ext.data.Store', {
                model: 'ComboBoxModel',
                autoLoad: true,
                proxy:
                {
                    type: 'ajax',
                    url: '/Minors/Semesters',
                    reader: { type: 'json', rootProperty: 'data' }
                },
                listeners: {
                    load: function () {
                        Ext.getCmp('semestercomboId1').");
                WriteLiteral(@"setValue(""1"");
                        Ext.getCmp('semestercomboId2').setValue(""1"");
                    }
                } 
            });

            var MinorTypesStore = Ext.create('Ext.data.Store', {
                model: 'ComboBoxModel',
                autoLoad: false,
                proxy:
                {
                    type: 'ajax',
                    url: '");
#nullable restore
#line 53 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Admission2\Minors.cshtml"
                     Write(Url.Action("MinorTypes","Admission2"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                    reader: { type: 'json', rootProperty: 'data' }
                }
            });

            var store = Ext.create(""Ext.data.BufferedStore"",
            {
                fields: [""Id"", ""number"", ""title"",""type"", ""year"", ""semeseter"", ""coordinator"", ""testUnits"", ""MaxStudentsCount"", ""selection"", ""addmission""],
                autoLoad: true,
                pageSize: 300,
                remoteSort: true,
                remoteFilter: true,
                proxy: {
                    type: 'ajax',
                    url: '/Admission2/Minors',
                    reader: {
                        type: 'json',
                        rootProperty: 'data',
                        totalProperty: 'total'
                    }
                }
            });


            var prevSettings = {};
            try {
                var prevSettingString = JSON.parse(localStorage.getItem(filterName) || ""[]"");

                for (var i = 0; i < prevSettingString.le");
                WriteLiteral(@"ngth; i++) {
                    prevSettings[prevSettingString[i][""property""]] = prevSettingString[i][""value""];
                }
            } catch (err) {

            }

            var filtersWnd = null;
            var setFilters = function () {
                var settings = [
                    { property: 'shortTitle', value: filtersWnd.getComponent(""title"").getValue() },
                    { property: 'coordinator', value: filtersWnd.getComponent(""coordinator"").getValue() },
                    { property: 'year', value: filtersWnd.getComponent(""year"").getValue() },
                    { property: 'semesterId', value: filtersWnd.getComponent(""semester"").getValue() },
                    { property: 'typeId', value: filtersWnd.getComponent(""type"").getValue() }
                ];
                store.setFilters(settings);
                localStorage.setItem(filterName, JSON.stringify(settings));
            };

            filtersWnd = Ext.create('Ext.window.Window', {
      ");
                WriteLiteral(@"          title: ""Фильтры"",
                closeAction: 'hide',
                resizable: false,
                autoHeight: true,
                bodyPadding: 6,
                defaults: {
                    xtype: 'textfield',
                    width: 500
                },
                items: [
                    { fieldLabel: ""Название модуля"", itemId: ""title"", value: prevSettings[""shortTitle""] },
                    { fieldLabel: ""Координатор"", itemId: ""coordinator"", value: prevSettings[""coordinator""] },
                    { fieldLabel: ""Учебный год"", itemId: ""year"", value: prevSettings[""year""] },
                    {
                        fieldLabel: ""Семестр"", itemId: ""semester"", value: prevSettings[""semesterId""],
                        xtype: ""combobox"", store: SemestersStore, valueField: 'Id', displayField: 'Name', queryMode: 'local'
                    },
                    {
                        fieldLabel: ""Тип майнора"", itemId: ""type"", value: prevSettings[""typ");
                WriteLiteral(@"eId""],
                        xtype: ""combobox"", store: MinorTypesStore, valueField: 'Id', displayField: 'Name', queryMode: 'remote'
                    }
                ],
                buttons: [
                    {
                        text: ""OK"",
                        handler: function () {
                            setFilters();
                            filtersWnd.hide();
                        }
                    },
                    {
                        text: ""Отмена"",
                        handler: function () { filtersWnd.hide(); }
                    }
                ]
            });

            setFilters();


            var tpl = '<a href=""/Admission2/MinorStudents/{Id}"">Студенты</a>';

            var autoAdmWnd = Ext.create('Ext.window.Window', {
                title: ""Перейти к автоматическому зачислению"",
                closeAction: 'hide',
                resizable: false,
                autoHeight: true,
                bodyPadd");
                WriteLiteral(@"ing: 6,
                defaults: {
                    xtype: 'textfield',
                    width: 500
                },
                items: [
                    { fieldLabel: ""Учебный год"", itemId: ""year"", value: 2016 },
                    {
                        fieldLabel: ""Семестр"",
                        itemId: ""semester"",
                        id: 'semestercomboId1',
                        xtype: ""combobox"",
                        store: SemestersStore,
                        valueField: 'Id',
                        displayField: 'Name',
                        queryMode: 'local',
                        allowBlank: false,
                        anyMatch: true,
                        forceSelection: true
                    }
                ],
                buttons: [
                    {
                        text: ""OK"",
                        handler: function () {
                            var aYear = autoAdmWnd.getComponent(""year"").getValue();");
                WriteLiteral(@"
                            var aSemester = autoAdmWnd.getComponent(""semester"").getValue();
                            window.location = ""/Admission2/PrepareAuto?year="" + aYear + ""&semester="" + aSemester;
                            autoAdmWnd.hide();
                        }
                    },
                    {
                        text: ""Отмена"",
                        handler: function () { autoAdmWnd.hide(); }
                    }
                ]
            });
            
            var sendButton;

");
#nullable restore
#line 189 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Admission2\Minors.cshtml"
             if (ViewBag.IsInMassPublishRole) {
             

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                var publishAdmWnd = Ext.create('Ext.window.Window', {
                    title: ""Отправить зачисления в ЛК"",
                    closeAction: 'hide',
                    resizable: false,
                    autoHeight: true,
                    bodyPadding: 6,
                    defaults: {
                        xtype: 'textfield',
                        width: 500
                    },
                    items: [
                        { fieldLabel: ""Учебный год"", itemId: ""year"", value: 2016 },
                        {
                            fieldLabel: ""Семестр"",
                            itemId: ""semester"",
                            id:  'semestercomboId2',
                            xtype: ""combobox"",
                            store: SemestersStore,
                            valueField: 'Id',
                            displayField: 'Name',
                            queryMode: 'local'
                        }
                    ],
     ");
                WriteLiteral(@"               buttons: [
                        {
                            text: ""OK"",
                            handler: function () {
                                Ext.MessageBox.show({
                                    msg: 'Отправка сообщений, пожалуйста подождите...',
                                    progressText: 'Отправка...',
                                    width: 300,
                                    wait: true,
                                    waitConfig: { interval: 200 }
                                });

                                var aYear = publishAdmWnd.getComponent(""year"").getValue();
                                var aSemester = publishAdmWnd.getComponent(""semester"").getValue();
                                Ext.Ajax.request({
                                    url: '");
#nullable restore
#line 229 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Admission2\Minors.cshtml"
                                     Write(Url.Action("PublishMinorAdmissions"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' ,
                                    params: { year: aYear, semester: aSemester },
                                    success: function (response) {
                                        if (response.status === 200) {
                                            Ext.toast({ html: ""Сообщения отправлены"", align: 't' });
                                        } else {
                                            Ext.toast({ html: ""Сообщения не отправлены"", align: 't' });
                                        }
                                        Ext.MessageBox.hide();
                                    },
                                    error: function(response) {
                                        Ext.MessageBox.hide();
                                    }
                                    
                                });
                            
                                
                            
                                publishAdmWnd.hide();
");
                WriteLiteral(@"                            }
                        },
                        {
                            text: ""Отмена"",
                            handler: function () { publishAdmWnd.hide(); }
                        }
                    ]
                });

                sendButton = Ext.create('Ext.Button',
                {
                    xtype: 'button',
                    //disabled: true,
                    text: 'Отправить зачисления в ЛК',
                    handler: function() {
                        publishAdmWnd.show();
                    }
                });
            ");
#nullable restore
#line 266 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Admission2\Minors.cshtml"
                   
            }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
            var gridPanel = Ext.create('Ext.grid.Panel',
            {
                region: 'center',
                store: store,
                tbar: [
                    {
                        xtype: 'button',
                        text: 'Фильтры...',
                        handler: function () { filtersWnd.show(); }
                    },
                    {
                        xtype: 'button',
                        text: ""Отменить фильтры"",
                        handler: function() {
                            localStorage.setItem(filterName, []);
                            store.clearFilter();
                        }
                    },
                    {
                        xtype: 'button',
                        text: ""Перейти к автоматическому зачислению"",
                        handler: function () { autoAdmWnd.show(); }
                    },
                    sendButton ? '-':'',
                    {
                        xtype:");
                WriteLiteral(@" 'button',
                        text: ""Отчёт зачисление на майноры в Excel"",
                        handler: downloadReport
                    },
                    '-',
                    sendButton

                ],
                loadMask: true,
                columns: [
                    { xtype: 'rownumberer', width: 50 },
                    {
                        header: 'Номер',
                        align: 'left',
                        dataIndex: 'number',
                        sortable: false,
                        width: 150,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
                    {
                        header: 'Короткое название модуля',
                        dataIndex: 'shortTitle',
                        width: 500,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
                    {
                        header: 'Тип майнора',
          ");
                WriteLiteral(@"              dataIndex: 'type',
                        width: 350,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
                    {
                        header: 'Год',
                        dataIndex: 'Year',
                        width: 150,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    }, {
                        header: 'Семестр',
                        dataIndex: 'semester',
                        width: 200,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
                    {
                        header: 'Координатор',
                        align: 'left',
                        dataIndex: 'coordinator',
                        width: 500,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
                    {
                        header: 'Зачетные единицы',
                        ali");
                WriteLiteral(@"gn: 'right',
                        dataIndex: 'testUnits',
                        width: 200,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
                    {
                        header: 'Лимит',
                        align: 'right',
                        dataIndex: 'MaxStudentsCount',
                        width: 150,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
                    {
                        header: 'Кол-во заявлений',
                        align: 'right',
                        dataIndex: 'selection',
                        width: 150,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
                    {
                        header: 'Зачислено',
                        align: 'right',
                        dataIndex: 'addmission',
                        width: 150,
                        renderer: Urfu.rend");
                WriteLiteral(@"ers.htmlEncodeWithToolTip
                    },
                    {
                        xtype: 'templatecolumn',
                        sortable: false,
                        tpl: tpl,
                        width: 420
                    }

                ]
            });

            var items = [
                gridPanel
            ];

            Urfu.createViewport('border', items);
        });
    </script>
");
            }
            );
            WriteLiteral("\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
