#pragma checksum "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8027b2a89e4f1db3e8da84c9a4da7fe6b32811b4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__AdditionalModules), @"mvc.1.0.view", @"/Views/Shared/_AdditionalModules.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\_ViewImports.cshtml"
using Urfu.Its.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
using Urfu.Its.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8027b2a89e4f1db3e8da84c9a4da7fe6b32811b4", @"/Views/Shared/_AdditionalModules.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"571aa92c4ca967469f2915635495580dde4274ca", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared__AdditionalModules : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Urfu.Its.Web.Models.AdditionalModulesView>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<script type=\"text/javascript\">\r\n\r\n        function downloadReport() {\r\n            var fileUrl = \'");
#nullable restore
#line 7 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                      Write(Url.Action(@Model.ReportActionName,@Model.ControllerName));

#line default
#line hidden
#nullable disable
            WriteLiteral("\'\r\n                .concat(\'?filter=\' + encodeURIComponent(localStorage.getItem(\"");
#nullable restore
#line 8 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                                                         Write(Model.LocalStorageName);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""") || ""[]""));
            window.location.href = fileUrl;
            return false;
        }

        Ext.onReady(function() {
            Ext.tip.QuickTipManager.init();

            Ext.define('Semester',
                {
                    extend: 'Ext.data.Model',
                    fields:
                    [
                        { type: 'string', name: 'Id' },
                        { type: 'string', name: 'Name' }
                    ]
                });

            var SemestersStore = Ext.create('Ext.data.Store',
                {
                    model: 'Semester',
                    proxy:
                    {
                        type: 'ajax',
                        url: '/Minors/Semesters',
                        reader: { type: 'json', rootProperty: 'data' }
                    }
                });

            var FKСourseStore = Ext.create('Ext.data.Store',
                {
                    data: [
                        { Id : """", Na");
            WriteLiteral(@"me : ""Все""},
                        { Id : 1,Name : ""1""},
                        { Id: 2, Name: ""2"" },
                        { Id: 3, Name: ""3"" }
                    ]
                });

            var statesStore = Ext.create('Ext.data.Store',
                {
                    model: 'Semester',
                    proxy:
                    {
                        type: 'ajax',
                        url: '/Minors/States',
                        reader: { type: 'json', rootProperty: 'data' }
                    }
                });

            var store = Ext.create(""Ext.data.BufferedStore"",
            {
                idProperty: 'id',
                //fields: [
                //    ""id"", ""title"", ""shortTitle"", ""coordinator"", ""type"", ""competence"", ""testUnits"", ""priority"", ""state"",
                //    ""approvedDate"", ""comment"", ""file"", ""specialities""
                //],
                autoLoad: true,
                pageSize: 300,
                remoteSor");
            WriteLiteral("t: true,\r\n                remoteFilter: true,\r\n                proxy: {\r\n                    type: \'ajax\',\r\n                    url: \'/");
#nullable restore
#line 71 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                      Write(Model.ControllerName);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"/Index',
                    reader: {
                        type: 'json',
                        rootProperty: 'data',
                        totalProperty: 'total'
                    }
                }
                });

            var prevSettings = {};
            try {
                var prevSettingString = JSON.parse(localStorage.getItem(""");
#nullable restore
#line 82 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                                                    Write(Model.LocalStorageName);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""") || ""[]"");

                for (var i = 0; i < prevSettingString.length; i++) {
                    prevSettings[prevSettingString[i][""property""]] = prevSettingString[i][""value""];
                }
            } catch (err) {
            }

            var filtersWnd = null;
            //направление, название модуля, координатор, учебный год, семестр
            var setFilters = function() {
                var settings = [
                    { property: 'specialities', value: filtersWnd.getComponent(""specialities"").getValue() },
                    { property: 'title', value: filtersWnd.getComponent(""title"").getValue() },
                    { property: 'coordinator', value: filtersWnd.getComponent(""coordinator"").getValue() },
                    { property: 'year', value: filtersWnd.getComponent(""year"").getValue() },
                    { property: 'semester', value: filtersWnd.getComponent(""semester"").getValue() },
                    { property: 'state', value: filtersWnd.getComponen");
            WriteLiteral("t(\"state\").getValue() }\r\n\r\n                ];\r\n                store.setFilters(settings);\r\n                localStorage.setItem(\"");
#nullable restore
#line 103 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                 Write(Model.LocalStorageName);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""", JSON.stringify(settings));
            };

            filtersWnd = Ext.create('Ext.window.Window',
            {
                title: ""Фильтры"",
                closeAction: 'hide',
                resizable: false,
                autoHeight: false,
                bodyPadding: 6,
                defaults: {
                    xtype: 'textfield',
                    width: 500
                },
                items: [
                    { fieldLabel: ""Направление"", itemId: ""specialities"", value: prevSettings[""specialities""] },
                    { fieldLabel: ""Название модуля"", itemId: ""title"", value: prevSettings[""title""] },
                    { fieldLabel: ""Координатор"", itemId: ""coordinator"", value: prevSettings[""coordinator""] },
                    { fieldLabel: ""Учебный год"", itemId: ""year"", value: prevSettings[""year""] },
                    {
                        fieldLabel: ""Семестр"",
                        itemId: ""semester"",
                        value: prevSe");
            WriteLiteral(@"ttings[""semester""],
                        xtype: ""combobox"",
                        store: SemestersStore,
                        valueField: 'Id',
                        displayField: 'Name',
                        queryMode: 'remote'
                    },
                    {
                        fieldLabel: ""Состояние"",
                        itemId: ""state"",
                        value: prevSettings[""state""],
                        xtype: ""combobox"",
                        store: statesStore,
                        valueField: 'Id',
                        displayField: 'Name',
                        queryMode: 'remote'
                    }
                ],
                buttons: [
                    {
                        text: ""OK"",
                        handler: function() {
                            setFilters();
                            filtersWnd.hide();
                        }
                    },
                    {
               ");
            WriteLiteral("         text: \"Отмена\",\r\n                        handler: function() { filtersWnd.hide(); }\r\n                    }\r\n                ]\r\n            });\r\n\r\n            setFilters();\r\n\r\n\r\n            var tpl = \'<a href=\"{file}\">Файл</a> | <a href=\"");
#nullable restore
#line 161 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                                       Write(Url.Action("Edit",Model.ControllerName));

#line default
#line hidden
#nullable disable
            WriteLiteral("?id={id}\">Изменить</a>\\\r\n                     | <a href=\"");
#nullable restore
#line 162 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                           Write(Url.Action("Disciplines", Model.ControllerName));

#line default
#line hidden
#nullable disable
            WriteLiteral("?moduleId={id}\">Дисциплины</a>\';\r\n");
#nullable restore
#line 163 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
             if (Model.ModuleType == ModuleTypes.Minor)
            {
                

#line default
#line hidden
#nullable disable
            WriteLiteral("tpl = tpl + \'\\| <a");
            BeginWriteAttribute("href", " href=\"", 6698, "\"", 6770, 2);
#nullable restore
#line 165 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
WriteAttributeValue("", 6705, Url.Action("EditRequirments",Model.ControllerName), 6705, 51, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 6756, "?moduleId={id}", 6756, 14, true);
            EndWriteAttribute();
            WriteLiteral(">Пререквизиты</a>\';");
#nullable restore
#line 165 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                                                                                                                           
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            var agreementStore = Ext.create(\'Ext.data.Store\', {\r\n                proxy: {\r\n                    type: \'ajax\',\r\n                    url: \'/");
#nullable restore
#line 171 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                      Write(Model.ControllerName);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"/GetMinorAgreement',
                    reader: {
                        type: 'json'
                    }
                },
                autoLoad: false,
                listeners: {
                    load: function (t, records) {
                        if (records[0].data.data.length == 0) {
                            Ext.Msg.show({
                                title: 'Уведомление',
                                message: 'Соглашений для данного майнора нет',
                                buttons: Ext.Msg.OK
                            });
                            return;
                        }
                        var agreementWnd = Ext.create('Ext.window.Window',
                        {
                            title: ""Соглашения"",
                            closeAction: 'hide',
                            resizable: true,
                            x: 100,
                            y: 100,
                            title: agreementTitle,
      ");
            WriteLiteral(@"                      autoHeight: true,
                            autoWidth: true,
                            maxHeight: 600,
                            store: agreementStore,
                            bodyPadding: 6,
                            scrollable: true,
                            items: [
                            ]
                        });

                        records[0].data.data.forEach(function (item, index, arr) {
                            var container = Ext.create('Ext.container.Container', {
                                layout: {
                                    type: 'vbox'
                                },
                                autoWidth: true,
                                renderTo: Ext.getBody(),
                                margin: '0 0 10 0',
                                items: [
                                    {
                                        xtype: 'label',
                                        text: item.");
            WriteLiteral(@"yearAndSemester,
                                        style: 'font-size: 110%; text-decoration: underline;'
                                    },
                                    {
                                        xtype: 'label',
                                        text: item.dates,
                                        style: 'font-weight: normal;'
                                    },
                                    {
                                        xtype: 'fieldcontainer',
                                        margin: '0 0 0 0',
                                        layout: {
                                            type: 'hbox',
                                            align: 'stretch'
                                        },
                                        items: [
                                            {
                                                xtype: 'label',
                                                text: 'Курс:',");
            WriteLiteral(@"
                                                width: 45
                                            },
                                            {
                                                xtype: 'label',
                                                text: item.courseTitle,
                                                style: 'font-weight: normal;'
                                            },
                                        ]
                                    },
                                    {
                                        xtype: 'fieldcontainer',
                                        margin: '0 0 0 0',
                                        layout: {
                                            type: 'hbox',
                                            align: 'stretch'
                                        },
                                        items: [
                                            {
                                          ");
            WriteLiteral(@"      xtype: 'label',
                                                text: 'Тип: ',
                                                width: 40
                                            },
                                            {
                                                xtype: 'label',
                                                text: item.courseType,
                                                style: 'font-weight: normal;'
                                            },
                                        ]
                                    },
                                    {
                                        xtype: 'fieldcontainer',
                                        margin: '0 0 0 0',
                                        layout: {
                                            type: 'hbox',
                                            align: 'stretch'
                                        },
                                        items: [
     ");
            WriteLiteral(@"                                       {
                                                xtype: 'label',
                                                text: 'URL курса: ',
                                                width: 85
                                            },
                                            {
                                                xtype: 'component',
                                                autoEl: {
                                                    tag: 'a',
                                                    href: item.courseURL,
                                                    html: item.courseURL
                                                }
                                            },
                                        ]
                                    },
                                    {
                                        xtype: 'fieldcontainer',
                                        layout: {
               ");
            WriteLiteral(@"                             type: 'vbox',
                                            align: 'stretch'
                                        },
                                        items: [
                                            {
                                                xtype: 'label',
                                                text: 'URL информационного сообщения для курса: ',
                                                width: 400
                                            },
                                            {
                                                xtype: 'component',
                                                autoEl: {
                                                    tag: 'a',
                                                    href: item.urfuInfoUrl,
                                                    html: item.urfuInfoUrl
                                                }
                                            },
              ");
            WriteLiteral(@"                          ]
                                    }
                                ]
                            });
                            agreementWnd.items.items.push(container);
                        });
                        agreementWnd.show();
                    }
                }
            });

            var agreementTitle = '';

            var gridPanel = Ext.create('Ext.grid.Panel',
            {
                region: 'center',
                store: store,
                loadMask: true,
                columnLines: true,
                selModel:
                {
                    selType: 'checkboxmodel',
                    headerWidth: 34,
                    mode:'SIMPLE'
                },
                tbar: [
                    {
                    xtype: 'button',
                        text: 'Фильтры...',
                        handler: function() { filtersWnd.show(); }
                },
                    {
     ");
            WriteLiteral("               xtype: \'button\',\r\n                        text: \"Отменить фильтры\",\r\n                        handler: function() {\r\n                        store.clearFilter();\r\n                        localStorage.setItem(\"");
#nullable restore
#line 343 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                         Write(Model.LocalStorageName);

#line default
#line hidden
#nullable disable
            WriteLiteral("\", JSON.stringify([]));\r\n                    }\r\n                },\r\n                    \'-\',\r\n                    {\r\n                    xtype: \'button\',\r\n                        text: \"Отчёт по ");
#nullable restore
#line 349 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                    Write(Model.ModuleType == ModuleTypes.Minor ? "майнорам" : Model.ModuleType == ModuleTypes.SectionFK ? "секциям ФК" : Model.ModuleType == ModuleTypes.Project ? "проектам" : "иностранным языкам" );

#line default
#line hidden
#nullable disable
            WriteLiteral(" в Excel\",\r\n                    handler: downloadReport\r\n                    },\r\n                    {\r\n                        xtype: \'button\',\r\n                        text: \"Дата выбора\",\r\n                        hidden: \'");
#nullable restore
#line 355 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                            Write(Model.ModuleType);

#line default
#line hidden
#nullable disable
            WriteLiteral("\' == \'");
#nullable restore
#line 355 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                                   Write(ModuleTypes.Minor);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                        handler: function() {
                            if (gridPanel.getSelectionModel().getSelection().length == 0) {
                                    Ext.MessageBox.alert(""Дата выбора"",""Для назначения даты выбора необходимо указать  модули"")
                                    return;
                            }
                            periodsWindow.show();
                        }
                    }
                ],
                plugins: [
                    {
                    ptype: ""rowexpander"",
                        rowBodyTpl: new Ext.XTemplate(
                            '<p><b>Компетенции: </b>{competence}</p>',
                            '<p><b>Зачётные единицы: </b>{testUnits}</p>',
                            '<p><b>Приоритет: </b>{priority}</p>',
                            '<p><b>Состояние: </b>{state}</p>',
                            '<p><b>Дата утверждения: </b>{approvedDate}</p>',
                            '<p><b>Комментар");
            WriteLiteral(@"ий: </b>{comment}</p>'
                        )
                    }
                ],
                columns: [
                    { xtype: 'rownumberer', width: 50 },
                    {
                    header: 'Направления',
                        align: 'left',
                        dataIndex: 'specialities',
                        sortable: false,
                        width: 150,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
                    {
                    header: 'Название модуля',
                        dataIndex: 'title',
                        width: 400,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
                    {
                    header: 'Короткое название модуля',
                        dataIndex: 'shortTitle',
                        width: 400,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
    ");
            WriteLiteral(@"                {
                    header: 'Координатор',
                        align: 'left',
                        dataIndex: 'coordinator',
                        width: 400,
                        renderer: Urfu.renders.htmlEncodeWithToolTip
                    },
                    {
                        xtype: 'actioncolumn',
                        region: 'center',
                        hidden: '");
#nullable restore
#line 410 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                            Write(Model.ModuleType);

#line default
#line hidden
#nullable disable
            WriteLiteral("\' != \'");
#nullable restore
#line 410 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                                   Write(ModuleTypes.Minor);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                        sortable: false,\r\n                        width: 50,\r\n                        items: [\r\n                            {\r\n                                icon: \'");
#nullable restore
#line 415 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                  Write(Url.Content("~/Content/Images/info.png"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                                iconCls: 'icon-padding',
                                tooltip: 'Соглашения',
                                handler: function (grid, rowIndex, colIndex) {
                                    var rec = grid.getStore().getAt(rowIndex);
                                    agreementTitle = ""Соглашения для модуля "" + rec.get('title');
                                    agreementStore.proxy.setUrl('");
#nullable restore
#line 421 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                                            Write(Url.Action("GetMinorAgreement", Model.ControllerName));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"?moduleUuid=' + rec.get('id'));
                                    agreementStore.load();
                                }
                            },
                        ]
                    },
                    {
                    xtype: 'templatecolumn',
                        sortable: false,
                        tpl: tpl,
                        width: 420
                    }
                ]
            });

            var periodContainer = {
                xtype: 'fieldcontainer',
                layout: {
                    type: 'hbox'
                },
                border: 1,
                padding: '0 10 10 10',
                items: [
                    {
                        xtype: 'numberfield',
                        itemId: 'year',
                        anchor: '100%',
                        value: ");
#nullable restore
#line 448 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                          Write(DateTime.Now.Year);

#line default
#line hidden
#nullable disable
            WriteLiteral(@",
                        width: 130,
                        minValue: 2000,
                        margin: '0 20 0 0',
                        allowBlank :false
                    },
                    {
                        xtype: 'combobox',
                        itemId: 'semester',
                        editable: false,
                        store: SemestersStore,
                        width: 110,
                        queryMode: 'remote',
                        displayField: 'Name',
                        valueField: 'Id',
                        margin: '0 20 0 0',
                        allowBlank :false
                    },
                    {
                        xtype: 'combobox',
                        itemId: 'course',
                        editable: false,
                        store: FKСourseStore,
                        queryMode: 'local',
                        width: 80,
                        displayField: 'Name',
                 ");
            WriteLiteral("       valueField: \'Id\',\r\n                        margin: \'0 20 0 0\',\r\n\r\n                    },\r\n                    {\r\n                        xtype: \'datefield\',\r\n                        itemId: \'startdate\',\r\n                        hidden:\'");
#nullable restore
#line 481 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                           Write(Model.ModuleType);

#line default
#line hidden
#nullable disable
            WriteLiteral("\' == \'");
#nullable restore
#line 481 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                                  Write(ModuleTypes.ForeignLanguage);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                        labelWidth: 5,
                        width: 130,
                        format: 'd.m.Y',
                        startDay: 1,
                        margin: '0 20 0 0',
                        formatText: """",
                        invalidText: ""Дата должна быть указана в формате дд.мм.гггг "",
                    },
                    {
                        xtype: 'datefield',
                        itemId: 'enddate',
                        labelWidth: 5,
                        width: 130,
                        format: 'd.m.Y',
                        startDay: 1,
                        margin: '0 20 0 0',
                        formatText: """",
                        invalidText: ""Дата должна быть указана в формате дд.мм.гггг "",
                        listeners: {
                            blur: function (t) {
                                var startdate = t.up().down('#startdate').value;
                                t.setMinValue(startd");
            WriteLiteral("ate);\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        xtype: \'image\',\r\n                        src: \'");
#nullable restore
#line 509 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                         Write(Url.Content("~/Content/Images/remove.png"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                        height: 16,
                        width: 16,
                        margin: '10 0 0 0',
                        listeners: {
                            click: {
                                element: 'el',
                                fn: function () {
                                    var periodsContainer = Ext.getCmp('periodsContainerId');
                                    if (periodsContainer != null) {
                                        periodsContainer.remove(Ext.getCmp(this.up().el.component.id));
                                        if (periodsContainer.items.items.length == 0) {
                                            Ext.getCmp('OK').setDisabled(true);
                                        }
                                    }

                                }
                            }
                        }
                    }

                ]

            };


            var periodsContainer = Ext.create(");
            WriteLiteral(@"'Ext.container.Container',
                {
                    id: 'periodsContainerId',
                    layout: {
                        type: 'vbox'
                    },
                    items: [
                        periodContainer
            ]

        });

            var periodsWindow = Ext.create('Ext.window.Window',
                {
                    closeAction: 'hide',
                    resizable: false,
                    width: 760,
                    dockedItems: [{
                        xtype: 'toolbar',
                        dock: 'top',
                        padding: '10 10 3 10',
                        defaults: {
                            style: {
                                padding: 0,
                            }
                        },
                        items: [{ xtype: 'tbtext', html: 'Год',   width: 130,    margin:'0 20 0 0' },
                            { xtype: 'tbtext', html: 'Семестр', width: 110,    margin:'0");
            WriteLiteral(" 20 0 0\' },\r\n                            { xtype: \'tbtext\', html: \'Курс\', width: 80,   margin:\'0 20 0 0\' },\r\n                            { xtype: \'tbtext\', html: \'Дата начала\', hidden:\'");
#nullable restore
#line 564 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                                                       Write(Model.ModuleType);

#line default
#line hidden
#nullable disable
            WriteLiteral("\' == \'");
#nullable restore
#line 564 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                                                                              Write(ModuleTypes.ForeignLanguage);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"', width: 130, margin: '0 20 0 0' },
                            { xtype: 'tbtext', html: 'Дата окончания', width: 130,     margin:'0 20 0 0'}
                        ]
                    }],
                    items: [
                        periodsContainer
                    ],
                    buttons: [
                        {
                            text: 'Добавить период',
                            handler: function() {
                                var length = periodsContainer.items.items.length;

                                periodContainer.id = 'periodContainer' + length;
                                    periodsContainer.add(periodContainer);

                                if (periodsContainer.items.items.length == 1)
                                    Ext.getCmp('OK').setDisabled(false);
                            }

                        },
                    {
                        text: ""OK"",
                        id: ""OK"",
             ");
            WriteLiteral(@"           handler: function () {

                                var selectedmodules = gridPanel.getSelectionModel().getSelection();

                                var modulesIds =[];
                                selectedmodules.forEach(function (element) {
                                    modulesIds.push(element.id);
                                });



                                var deadlines = [];

                                for (var i = 0; i < periodsContainer.items.items.length; i++) {

                                    var yearcomponent = periodsContainer.items.items[i].getComponent('year');
                                    var semestercomponent = periodsContainer.items.items[i].getComponent('semester');

                                    if (!yearcomponent.isValid() || !semestercomponent.isValid()) {
                                        Ext.Msg.alert('Ошибка', 'Заполнены не все обязательные поля!!');
                                        return;
  ");
            WriteLiteral(@"                                  }

                                    var year = periodsContainer.items.items[i].getComponent('year').value;
                                    var semester = periodsContainer.items.items[i].getComponent('semester').value;
                                    var course = periodsContainer.items.items[i].getComponent('course').value;
                                    var startdate = periodsContainer.items.items[i].getComponent('startdate').value;
                                    var enddate = periodsContainer.items.items[i].getComponent('enddate').value;
                                    deadlines.push({ year: year, semesterId: semester, course: course, selectionbegin: startdate, selectiondeadline: enddate });
                                }
                                Ext.Ajax.request({
                                    method: 'POST',
                                    dataType: 'json',
                                    url: '/");
#nullable restore
#line 621 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                                      Write(Model.ControllerName);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"/SetDeadlines',
                                    params: {
                                        modules: JSON.stringify(modulesIds),
                                        deadlines:Ext.JSON.encode(deadlines)
                                    },
                                    success: function (response) {
                                        if (Ext.decode(response.responseText) != null) {
                                            Ext.Msg.alert('Предупреждение', 'Даты выбора уже установлены для:<br></br>' + Ext.decode(response.responseText));
                                        }
                                        else
                                        Ext.Msg.alert('OK', 'Даты выбора установлены');
                                    },
                                    failure: function (response) {
                                            console.log(response.status);
                                        }
                                });

    ");
            WriteLiteral(@"                            periodsWindow.close();
                                gridPanel.getSelectionModel().deselectAll();

                            }
                    },
                    {
                        text: ""Отмена"",
                        handler: function () {
                            periodsWindow.close();
                            gridPanel.getSelectionModel().deselectAll();
                        }
                    }
                    ]
                });


           var items = [
                gridPanel
            ];

            Urfu.createViewport('border', items);
            gridPanel.getStore().on('load', function (store, records, options) {
                var focus = '");
#nullable restore
#line 660 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\Shared\_AdditionalModules.cshtml"
                        Write(ViewBag.Focus);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
                if (focus && focus.length > 0) {

                    var focusRow = store.findExact('id', focus);
                    if (focusRow > 0) {
                        var rowData = store.getAt(focusRow);
                        gridPanel.getView().focusRow(rowData);
                        gridPanel.getSelectionModel().select(rowData);
                    }
                }
                return false;
            });
        });
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Urfu.Its.Web.Models.AdditionalModulesView> Html { get; private set; }
    }
}
#pragma warning restore 1591
