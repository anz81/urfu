#pragma checksum "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\MetaSubgroups\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "75cb5f1020118f8bf9895e38b37aeaa4ab1cdba3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_MetaSubgroups_Index), @"mvc.1.0.view", @"/Views/MetaSubgroups/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\_ViewImports.cshtml"
using Urfu.Its.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\_ViewImports.cshtml"
using Urfu.Its.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"75cb5f1020118f8bf9895e38b37aeaa4ab1cdba3", @"/Views/MetaSubgroups/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"571aa92c4ca967469f2915635495580dde4274ca", @"/Views/_ViewImports.cshtml")]
    public class Views_MetaSubgroups_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\MetaSubgroups\Index.cshtml"
  
    ViewBag.Title = "Количество подгрупп версии ОП " + ViewBag.programInfo;
    Layout = "~/Views/Shared/_ExtLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">
    Ext.onReady(function () {
        Ext.tip.QuickTipManager.init();
        
        var prevSettings = {};
        try {
            var prevSettingString = JSON.parse(localStorage.getItem(""MetaSubgroupsFilters"") || ""[]"");

            for (var i = 0; i < prevSettingString.length; i++) {
                prevSettings[prevSettingString[i][""property""]] = prevSettingString[i][""value""];
            }
        } catch (err) {

        }

        var store = Ext.create(""Ext.data.BufferedStore"",
            {
                idProperty: 'Id',
                fields: [""Id"", ""GroupName"", ""Term"", ""ModuleTitle"", ""Name"", ""Year"", ""subgroupType"",  ""count"",  ""Selectable"",  ""Distribution""],
                autoLoad: true,
                pageSize: 300,
                remoteSort: true,
                remoteFilter: true,
                proxy: {
                    type: 'ajax',
                    url: '/MetaSubgroups/Index?programId='+");
#nullable restore
#line 33 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\MetaSubgroups\Index.cshtml"
                                                      Write(ViewBag.programId);

#line default
#line hidden
#nullable disable
                WriteLiteral(@",
                        reader: {
                            type: 'json',
                            rootProperty: 'data',
                            totalProperty: 'total'
                        }
                    }
                });

        var filtersWnd = null;


        var setFilters = function () {
            var settings = [
                            { property: 'GroupName', value: filtersWnd.getComponent(""GroupName"").getValue() },
                            { property: 'Term', value: filtersWnd.getComponent(""Term"").getValue() },
                            { property: 'ModuleTitle', value: filtersWnd.getComponent(""ModuleTitle"").getValue() },
                            { property: 'Name', value: filtersWnd.getComponent(""Name"").getValue() },
                            { property: 'subgroupType', value: filtersWnd.getComponent(""subgroupType"").getValue() },
                            { property: 'count', value: filtersWnd.getComponent(""count"").getValue() },
       ");
                WriteLiteral(@"                     { property: 'year', value: filtersWnd.getComponent(""year"").getValue() }
            ];
            store.setFilters(settings);
            localStorage.setItem(""MetaSubgroupsFilters"", JSON.stringify(settings));
        };

        filtersWnd = Ext.create('Ext.window.Window', {
            title: ""Фильтры"",
            closeAction: 'hide',
            resizable: false,
            autoHeight: true,
            bodyPadding: 6,
            defaults: {
                xtype: 'textfield',
                width: 500
            },
            items: [
                { fieldLabel: ""Группа"", itemId: ""GroupName"", value: prevSettings[""GroupName""]  },
                { fieldLabel: ""Семестр"", itemId: ""Term"", value: prevSettings[""Term""]  },
                { fieldLabel: ""Модуль"", itemId: ""ModuleTitle"", value: prevSettings[""ModuleTitle""]  },
                { fieldLabel: ""Название"", itemId: ""Name"", value: prevSettings[""Name""]  },
                { fieldLabel: ""Тип подгруппы"", item");
                WriteLiteral(@"Id: ""subgroupType"", value: prevSettings[""SubgroupType""] },
                { fieldLabel: ""Количество"", itemId: ""count"", value: prevSettings[""count""]  },
                { fieldLabel: ""Год"", itemId: ""year"", value: prevSettings[""year""]  }
            ],
            buttons: [
                {
                    text: ""OK"",
                    handler: function () {
                        setFilters();
                        filtersWnd.hide();
                    }
                },
                {
                    text: ""Отмена"",
                    handler: function () { filtersWnd.hide(); }
                }
            ]
        });

        setFilters();

        var tpl = '<a href=""/MetaSubgroups/Edit?id={Id}"">Редактировать</a> ';

            var gridPanel = Ext.create('Ext.grid.Panel',
                {
                    region: 'center',
                    store: store,
                    loadMask: true,
                    tbar: [
                        {
  ");
                WriteLiteral(@"                          xtype: 'button',
                            text: 'Фильтры...',
                            handler: function () { filtersWnd.show(); }
                        },
                        {
                            xtype: 'button',
                            text: ""Отменить фильтры"",
                            handler: function() {
                                store.clearFilter();
                                localStorage.setItem(""MetaSubgroupsFilters"", ""[]"");
                            }
                        },
                        {
                            xtype: 'button',
                            text: ""Подгруппы"",
                            handler: function () { window.location = ""/Subgroup/Index?programId=");
#nullable restore
#line 119 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\MetaSubgroups\Index.cshtml"
                                                                                           Write(ViewBag.programId);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"""; }
                        },
                        {
                            xtype: 'button',
                            text: ""Пересчитать"",
                            handler: function () { window.location = ""/MetaSubgroups/RecalculateMetas?programId=");
#nullable restore
#line 124 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\MetaSubgroups\Index.cshtml"
                                                                                                           Write(ViewBag.programId);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"""; }
                        }
                    ],
                    columns: [
                        { xtype: 'rownumberer', width: 50 },
                        {
                            header: 'Группа',
                            dataIndex: 'GroupName',
                            width: 150,
                            renderer: Ext.util.Format.htmlEncode
                        },
                        {
                            header: 'Семестр',
                            dataIndex: 'Term',
                            width: 100,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'Год',
                            dataIndex: 'year',
                            width: 100,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'Модуль',
         ");
                WriteLiteral(@"                   dataIndex: 'ModuleTitle',
                            width: 300,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'Дисциплина',
                            dataIndex: 'Name',
                            width: 200,
                            renderer: Ext.util.Format.htmlEncode
                        },
                        {
                            header: 'Нагрузка',
                            align: 'center',
                            dataIndex: 'subgroupType',
                            renderer: Ext.util.Format.htmlEncode,
                            width: 180
                        },
                        {
                            header: 'Количество',
                            align: 'center',
                            dataIndex: 'count',
                            renderer: Ext.util.Format.htmlEncode,
                     ");
                WriteLiteral(@"       width: 180
                        },
                        {
                            header: 'Распределение',
                            align: 'center',
                            dataIndex: 'Distribution',
                            renderer: Ext.util.Format.htmlEncode,
                            width: 180
                        },
                        {
                            header: 'Выборные группы',
                            align: 'center',
                            dataIndex: 'Selectable',
                            renderer: Ext.util.Format.htmlEncode,
                            width: 180
                        },
                       {
                            xtype: 'templatecolumn',
                            tpl: tpl,
                            sortable: false,
                            width: 470
                        }
                    ]
                });

            var items = [
                gridPanel
         ");
                WriteLiteral("   ];\r\n\r\n            Urfu.createViewport(\'border\', items);\r\n            gridPanel.getStore().on(\'load\', function (store, records, options) {\r\n                var focus = \'");
#nullable restore
#line 202 "D:\-urfu\its\Urfu.Its.Web\Urfu.Its.Web\Views\MetaSubgroups\Index.cshtml"
                        Write(ViewBag.Focus);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
                if (focus && focus.length > 0) {

                    var focusRow = store.findExact('Id', parseInt(focus));
                    if (focusRow > 0) {
                        var rowData = store.getAt(focusRow);
                        gridPanel.getView().focusRow(rowData);
                        gridPanel.getSelectionModel().select(rowData);
                    }
                }
                return false;
            });
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
