@{
    ViewBag.Title = "Справочник Способ проведения практики";
    Layout = "~/Views/Shared/_ExtLayout.cshtml";
}
@section scripts
{
    <script type="text/javascript">

        Ext.onReady(function() {
            Ext.tip.QuickTipManager.init();

            var store = Ext.create("Ext.data.Store",
                {
                    fields: [
                        "Id", "Description"
                    ],
                    autoLoad: true,
                    //pageSize: 300,
                    remoteSort: true,
                    remoteFilter: true,

                    proxy: {
                        type: 'ajax',
                        url: window.location.pathname,
                        reader: {
                            type: 'json'
                        }
                    }
                });
            var prevSettings = {};

            try {
                var prevSettingString = JSON.parse(localStorage.getItem("PracticeWaysFilters") || "[]");

                for (var i = 0; i < prevSettingString.length; i++) {
                    prevSettings[prevSettingString[i]["property"]] = prevSettingString[i]["value"];
                    prevSettings[prevSettingString[i]["property"]] = prevSettingString[i]["value"];
                }
            } catch (err) {

            }

            var filtersWnd = null;

            var setFilters = function() {
                var settings = [
                    { property: 'Description', value: filtersWnd.getComponent("Description").getValue() },
                ];

                localStorage.setItem("PracticeWaysFilters", JSON.stringify(settings));
                store.setFilters(settings);
                store.load();

            };


            filtersWnd = Ext.create('Ext.window.Window',
                {
                    title: "Фильтры",
                    closeAction: 'hide',
                    resizable: false,
                    autoHeight: true,
                    bodyPadding: 6,
                    defaults: {
                        xtype: 'textfield',
                        width: 500
                    },
                    items: [
                        { fieldLabel: "Описание", itemId: "Description", value: prevSettings["Description"] },
                    ],
                    buttons: [
                        {
                            text: "OK",
                            handler: function() {
                                setFilters();
                                filtersWnd.hide();
                            }
                        },
                        {
                            text: "Отмена",
                            handler: function() { filtersWnd.hide(); }
                        }
                    ]
                });

            setFilters();

            var gridPanel = null;

            gridPanel = Ext.create('Ext.grid.Panel',
                {
                    multiSelect: true,
                    region: 'center',
                    store: store,
                    loadMask: true,
                    columnLines: true,
                    tbar: [
                        {
                            xtype: 'button',
                            text: 'Добавить',
                            handler: function() { createRecordWindow(store).show(); }
                        },
                        {
                            xtype: 'button',
                            text: 'Фильтры...',
                            handler: function() { filtersWnd.show(); }
                        },
                        {
                            xtype: 'button',
                            text: "Отменить фильтры",
                            handler: function() {
                                store.clearFilter();
                                store.load();
                                localStorage.setItem("PracticeWaysFilters", "{}");

                            }
                        }
                    ],
                    columns: [
                        { xtype: 'rownumberer', width: 50 },
                        {
                            header: 'Ид',
                            dataIndex: 'Id',
                            width: 200,
                            renderer: Urfu.renders.htmlEncode
                        },
                        {
                            header: 'Описание',
                            dataIndex: 'Description',
                            width: 800,
                            renderer: Urfu.renders.htmlEncodeWithToolTip

                        },
                        {
                            xtype: 'actioncolumn',
                            resizable: false,
                            sortable: false,
                            width: 60,
                            items: [
                                {
                                    icon: '@Url.Content("/Content/Images/edit.png")',
                                    tooltip: 'Редактировать',
                                    iconCls: 'icon-padding',
                                    handler: function(grid, rowIndex, colIndex, item, e, record) {
                                        createRecordWindow(store, record).show();
                                    }
                                }, {
                                    icon: '@Url.Content("/Content/Images/remove.png")',
                                    tooltip: 'Удалить',
                                    handler: function(grid, rowIndex, colIndex, item, e, record) {

                                        if (confirm('Вы действительно желаете удалить запись?')) {
                                            Ext.Ajax.request({
                                                method: 'GET',
                                                url: '@Url.Action("Delete")',
                                                success: function(response) {
                                                    store.load();
                                                },
                                                failure: function(d) {
                                                    if (d.error)
                                                        alert(d.error);
                                                    console.error(d);
                                                },
                                                params: { id: record.get('Id') }
                                            });
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                });
            d = null;
            var items = [
                gridPanel
            ];

            Urfu.createViewport('border', items);

            function createRecordWindow(store, record) {
                return Ext.create('Ext.window.Window',
                    {
                        title: record
                            ? 'Редактирование Способ проведения практики'
                            : 'Добавление Способ проведения практики',
                        resizable: false,
                        //autoHeight: true,
                        height: 200,
                        bodyPadding: 6,
                        modal: true,
                        name: 'editForm',
                        viewModel: {
                            data: Ext.apply({}, record ? record.data : {})
                        },
                        items: {
                            xtype: 'form',
                            id: 'form',
                            layout: {
                                type: 'vbox',
                                align: 'stretch'
                            },
                            defaults: {
                                xtype: 'textfield',
                                labelWidth:
                                    190,
                                width:
                                    600
                            },
                            items: [
                                {
                                    fieldLabel: 'Идентификатор',
                                    name: 'id',
                                    bind: '{id}',
                                    readOnly: true,
                                    hidden: true,
                                },
                                {
                                    xtype: 'textarea',
                                    //height: 20,
                                    fieldLabel: 'Описание',
                                    //maxLength: 4000,
                                    name: 'Description',
                                    bind: '{Description}',
                                    allowBlank: false,
                                    editable: true,
                                }
                            ]
                        },

                        buttons: [
                            {
                                text: "OK",
                                formBind: true,
                                handler: function() {
                                    var window = this.up('window');
                                    var form = window.down('form');
                                    var data = form.getValues();
                                    if (record)
                                        data.id = record.get('Id');
                                    if (record || form.isValid()) {
                                        Ext.Ajax.request({
                                            url: record ? '@Url.Action("Edit")' : '@Url.Action("Create")',
                                            success: function(response) {
                                                var d = Ext.JSON.decode(response.responseText);
                                                if (!d.success) {
                                                    if (d.errors) {
                                                        var basicForm = form.getForm();
                                                        for (var key in d.errors) {
                                                            if (d.errors.hasOwnProperty(key)) {
                                                                var field = basicForm.findField(key);
                                                                if (field)
                                                                    field.markInvalid(d.errors[key]);
                                                            }
                                                        }
                                                    }
                                                } else {
                                                    window.close();
                                                    store.load();
                                                }
                                            },
                                            failure: function(d) {
                                                if (d.error)
                                                    alert(d.error);
                                                console.error(d);
                                            },
                                            jsonData: data
                                        });
                                    }
                                }
                            }, {
                                text: "Отмена",
                                handler: function() { this.up('window').close(); }
                            }
                        ]
                    });
            }
        });
    </script>
}
