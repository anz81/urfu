@model Urfu.Its.Web.DataContext.EduProgram

@{
    ViewBag.Title = "Создание образовательной программы";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Программа</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.directionId, "Направление", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("directionId", String.Empty)
                @Html.ValidationMessageFor(model => model.directionId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new {htmlAttributes = new {@Value = @DateTime.Now.Year.ToString()}})
                @Html.ValidationMessageFor(model => model.Year)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.qualification, "Квалификация", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("qualification", String.Empty)
                @Html.ValidationMessageFor(model => model.qualification)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.divisionId, "Подразделение", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("divisionId", String.Empty)
                @Html.ValidationMessageFor(model => model.divisionId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.profileId, "Профиль", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("profileId", String.Empty)
                @Html.ValidationMessageFor(model => model.profileId)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.familirizationType, "Форма освоения", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("familirizationType", String.Empty)
                @Html.ValidationMessageFor(model => model.familirizationType)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.familirizationCondition, "Условие освоения", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("familirizationCondition", String.Empty)
                @Html.ValidationMessageFor(model => model.familirizationCondition)
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("К списку", "Index")
</div>

@section Scripts {
    <script>
    $(document).ready(function () {
        $("#directionId").change(function () {
            var divisionQuery = {};
            divisionQuery.url = "/api/divisionnames?okso=&directionId=" + $("#directionId").val();
            divisionQuery.type = "GET";
            divisionQuery.datatype = "json";
            divisionQuery.contentType = "application/json";
            divisionQuery.success = function (programsList) {
                $("#divisionId").empty();
                for (var i = 0; i < programsList.length; i++) {
                    $("#divisionId").append("<option value=" + programsList[i].id + ">" + programsList[i].divisionName + "</option>");
                }
            };
            divisionQuery.error = function () { alert("Ошибка получения списка подразделений"); };
            $.ajax(divisionQuery);


            var profilesQuery = {};
            profilesQuery.url = "/api/profilenames?okso=&directionId=" + $("#directionId").val();
            profilesQuery.type = "GET";
            profilesQuery.datatype = "json";
            profilesQuery.contentType = "application/json";
            profilesQuery.success = function (programsList) {
                $("#profileId").empty();
                for (var i = 0; i < programsList.length; i++) {
                    $("#profileId").append("<option value=" + programsList[i].id + ">" + programsList[i].name + "</option>");
                }
            };
            profilesQuery.error = function () { alert("Ошибка получения списка подразделений"); };
            $.ajax(profilesQuery);
        });
    });
    </script>
}