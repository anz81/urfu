@{
    ViewBag.Title = "Количество подгрупп версии ОП " + ViewBag.programInfo;
    Layout = "~/Views/Shared/_ExtLayout.cshtml";
}

@section scripts
{
    <script type="text/javascript">
    Ext.onReady(function () {
        Ext.tip.QuickTipManager.init();
        
        var prevSettings = {};
        try {
            var prevSettingString = JSON.parse(localStorage.getItem("MetaSubgroupsFilters") || "[]");

            for (var i = 0; i < prevSettingString.length; i++) {
                prevSettings[prevSettingString[i]["property"]] = prevSettingString[i]["value"];
            }
        } catch (err) {

        }

        var store = Ext.create("Ext.data.BufferedStore",
            {
                idProperty: 'Id',
                fields: ["Id", "GroupName", "Term", "ModuleTitle", "Name", "Year", "subgroupType",  "count",  "Selectable",  "Distribution"],
                autoLoad: true,
                pageSize: 300,
                remoteSort: true,
                remoteFilter: true,
                proxy: {
                    type: 'ajax',
                    url: '/MetaSubgroups/Index?programId='+@ViewBag.programId,
                        reader: {
                            type: 'json',
                            rootProperty: 'data',
                            totalProperty: 'total'
                        }
                    }
                });

        var filtersWnd = null;


        var setFilters = function () {
            var settings = [
                            { property: 'GroupName', value: filtersWnd.getComponent("GroupName").getValue() },
                            { property: 'Term', value: filtersWnd.getComponent("Term").getValue() },
                            { property: 'ModuleTitle', value: filtersWnd.getComponent("ModuleTitle").getValue() },
                            { property: 'Name', value: filtersWnd.getComponent("Name").getValue() },
                            { property: 'subgroupType', value: filtersWnd.getComponent("subgroupType").getValue() },
                            { property: 'count', value: filtersWnd.getComponent("count").getValue() },
                            { property: 'year', value: filtersWnd.getComponent("year").getValue() }
            ];
            store.setFilters(settings);
            localStorage.setItem("MetaSubgroupsFilters", JSON.stringify(settings));
        };

        filtersWnd = Ext.create('Ext.window.Window', {
            title: "Фильтры",
            closeAction: 'hide',
            resizable: false,
            autoHeight: true,
            bodyPadding: 6,
            defaults: {
                xtype: 'textfield',
                width: 500
            },
            items: [
                { fieldLabel: "Группа", itemId: "GroupName", value: prevSettings["GroupName"]  },
                { fieldLabel: "Семестр", itemId: "Term", value: prevSettings["Term"]  },
                { fieldLabel: "Модуль", itemId: "ModuleTitle", value: prevSettings["ModuleTitle"]  },
                { fieldLabel: "Название", itemId: "Name", value: prevSettings["Name"]  },
                { fieldLabel: "Тип подгруппы", itemId: "subgroupType", value: prevSettings["SubgroupType"] },
                { fieldLabel: "Количество", itemId: "count", value: prevSettings["count"]  },
                { fieldLabel: "Год", itemId: "year", value: prevSettings["year"]  }
            ],
            buttons: [
                {
                    text: "OK",
                    handler: function () {
                        setFilters();
                        filtersWnd.hide();
                    }
                },
                {
                    text: "Отмена",
                    handler: function () { filtersWnd.hide(); }
                }
            ]
        });

        setFilters();

        var tpl = '<a href="/MetaSubgroups/Edit?id={Id}">Редактировать</a> ';

            var gridPanel = Ext.create('Ext.grid.Panel',
                {
                    region: 'center',
                    store: store,
                    loadMask: true,
                    tbar: [
                        {
                            xtype: 'button',
                            text: 'Фильтры...',
                            handler: function () { filtersWnd.show(); }
                        },
                        {
                            xtype: 'button',
                            text: "Отменить фильтры",
                            handler: function() {
                                store.clearFilter();
                                localStorage.setItem("MetaSubgroupsFilters", "[]");
                            }
                        },
                        {
                            xtype: 'button',
                            text: "Подгруппы",
                            handler: function () { window.location = "/Subgroup/Index?programId=@ViewBag.programId"; }
                        },
                        {
                            xtype: 'button',
                            text: "Пересчитать",
                            handler: function () { window.location = "/MetaSubgroups/RecalculateMetas?programId=@ViewBag.programId"; }
                        }
                    ],
                    columns: [
                        { xtype: 'rownumberer', width: 50 },
                        {
                            header: 'Группа',
                            dataIndex: 'GroupName',
                            width: 150,
                            renderer: Ext.util.Format.htmlEncode
                        },
                        {
                            header: 'Семестр',
                            dataIndex: 'Term',
                            width: 100,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'Год',
                            dataIndex: 'year',
                            width: 100,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'Модуль',
                            dataIndex: 'ModuleTitle',
                            width: 300,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'Дисциплина',
                            dataIndex: 'Name',
                            width: 200,
                            renderer: Ext.util.Format.htmlEncode
                        },
                        {
                            header: 'Нагрузка',
                            align: 'center',
                            dataIndex: 'subgroupType',
                            renderer: Ext.util.Format.htmlEncode,
                            width: 180
                        },
                        {
                            header: 'Количество',
                            align: 'center',
                            dataIndex: 'count',
                            renderer: Ext.util.Format.htmlEncode,
                            width: 180
                        },
                        {
                            header: 'Распределение',
                            align: 'center',
                            dataIndex: 'Distribution',
                            renderer: Ext.util.Format.htmlEncode,
                            width: 180
                        },
                        {
                            header: 'Выборные группы',
                            align: 'center',
                            dataIndex: 'Selectable',
                            renderer: Ext.util.Format.htmlEncode,
                            width: 180
                        },
                       {
                            xtype: 'templatecolumn',
                            tpl: tpl,
                            sortable: false,
                            width: 470
                        }
                    ]
                });

            var items = [
                gridPanel
            ];

            Urfu.createViewport('border', items);
            gridPanel.getStore().on('load', function (store, records, options) {
                var focus = '@ViewBag.Focus';
                if (focus && focus.length > 0) {

                    var focusRow = store.findExact('Id', parseInt(focus));
                    if (focusRow > 0) {
                        var rowData = store.getAt(focusRow);
                        gridPanel.getView().focusRow(rowData);
                        gridPanel.getSelectionModel().select(rowData);
                    }
                }
                return false;
            });
        });
    </script>
}