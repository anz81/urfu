@model Urfu.Its.Web.DataContext.MetaSubgroup

@{
    ViewBag.Title = "Редактирование количества подгрупп";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Редактирование количества подгрупп</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Group.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Group.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Module.numberAndTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Module.numberAndTitle)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Term, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Term)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Program.DirectionAndName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Program.DirectionAndName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tmer.rmer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Tmer.rmer)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="catalogDisciplineUuid">Дисциплина</label>
            <div class="col-md-10">
                @ViewBag.discipline
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Count, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Count, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Count, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (@Model.kmer == "tlekc" || "tprak" == @Model.kmer)
        {
            <div class="form-group">
                @Html.Label(Model.kmer == "tlekc" ? "Распределение практических занятий" : "Распределение лабораторных занятий", "", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Distribution, new { htmlAttributes = new { @class = "form-control",type = "hidden" } })
                    @Html.ValidationMessageFor(model => model.Distribution, "", new { @class = "text-danger" })
                    <p id="distrbox"></p>
                    <p id="distroWarn" class="text-danger"></p>
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Selectable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Selectable)
                    @Html.ValidationMessageFor(model => model.Selectable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Вернуться к списку", "Index", new { focus = Model.Id, Model.programId })
</div>

@section scripts
{
    @if (@Model.kmer == "tlekc" || "tprak" == @Model.kmer)
    {
        <script>
            function computeWarning() {
                var total = 0;
                $("#distrbox").children().each(function (i) {
                    total += parseInt($(this).val());
                });
                var ec = '@ViewBag.ExpectedChildCount';
                if (ec && ec.length > 0) {
                    $("#distroWarn").empty();
                    if (ec != total)
                        $("#distroWarn").text("Сумма распределений равна " + total + " , количество подгрупп равно " + ec);
                }
            };

            function rebuildDistr() {
                var str = "";
                $("#distrbox").children().each(function(i) {
                    if (str !== "")
                        str += ",";
                    str += $(this).val();
                });
                $("#Distribution").val(str);
                computeWarning();
            };

            function buildBoxes() {
                var count = $("#Count").val();
                var distr = $("#Distribution").val().split(",");

                $("#distrbox").empty();
                for (var i = 0; i < count; i++) {
                    $("#distrbox").append('<input class="form-control text-box single-line" type="number" onchange="rebuildDistr()" value="' + (distr[i]||1) + '">');
                }
            };

            $(document).ready(function () {
                $("#Count").change(function () {
                    buildBoxes();
                    rebuildDistr();
                });
                buildBoxes();
                computeWarning();
            });
        </script>
    }
}
