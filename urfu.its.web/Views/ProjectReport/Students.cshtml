@{
    ViewBag.Title = "Отчет по студентам";

    Layout = "~/Views/Shared/_ExtLayout.cshtml";
}

<script type="text/javascript">
    
    Ext.onReady(function () {

        Ext.tip.QuickTipManager.init();

        var filterName = "ProjectReportStudentsFilters"

        var dataYears = Urfu.parseJson('@ViewBag.Years');
        var yearsStore = Ext.create("Ext.data.Store",
            {
                data: dataYears
            });
        var dataSemesters = Urfu.parseJson('@ViewBag.Semesters');
        var semestersStore = Ext.create("Ext.data.Store",
            {
                data: dataSemesters
            });

        var store = Ext.create("Ext.data.Store",
        {
            autoLoad: false,
            remoteSort: false,
            remoteFilter: true,
            proxy: {
                type: 'ajax',
                url: '@Url.Action("Students")',
                reader: {
                    type: 'json',
                    rootProperty: 'data'
                }
            }
        });

        var prevSettings = {};
        try {
            var prevSettingString = JSON.parse(localStorage.getItem(filterName) || "[]");

            for (var i = 0; i < prevSettingString.length; i++) {
                prevSettings[prevSettingString[i]["property"]] = prevSettingString[i]["value"];
            }

            if (prevSettings["Years"] == null || prevSettings["Years"] == "[]") {
                prevSettings["Years"] = [];
                prevSettings["Years"].push(parseInt('@ViewBag.CurrentYear', 10));
            }

            if (prevSettings["Semesters"] == null || prevSettings["Semesters"] == "[]") {
                prevSettings["Semesters"] = [];
                prevSettings["Semesters"].push(parseInt('@ViewBag.CurrentSemester', 10));
            }

        } catch (err) {

        }
        
        var setFilters = function (year, semester, direction, title, student) {
            var settings = [
                { property: 'Years', value: year },
                { property: 'Semesters', value: semester },
                { property: 'Direction', value: direction == undefined ? filtersWnd.getComponent("Direction").getValue() : direction },
                { property: 'Title', value: title == undefined ? filtersWnd.getComponent("Project").getValue() : title },
                { property: 'Student', value: student == undefined ? filtersWnd.getComponent("Student").getValue() : student }
            ];
            store.setFilters(settings);
            localStorage.setItem(filterName, JSON.stringify(settings));
        };

        filtersWnd = Ext.create('Ext.window.Window', {
            title: "Фильтры",
            closeAction: 'hide',
            resizable: false,
            autoHeight: true,
            bodyPadding: 6,
            defaults: {
                xtype: 'textfield',
                width: 500
            },
            items: [
                { fieldLabel: "Направление", itemId: "Direction", value: prevSettings["Direction"] },
                { fieldLabel: "Проект", itemId: "Project", value: prevSettings["Title"] },
                { fieldLabel: "ФИО студента", itemId: "Student", value: prevSettings["Student"] }
            ],
            buttons: [
                {
                    text: "OK",
                    handler: function () {
                        setFilters(Ext.getCmp(yearCmbxId).getValue(), Ext.getCmp(semesterCmbxId).getValue());
                        filtersWnd.hide();
                    }
                },
                {
                    text: "Отмена",
                    handler: function () { filtersWnd.hide(); }
                }
            ]
        });
        setFilters(prevSettings["Years"], prevSettings["Semesters"]);

        function downloadReport() {
            var fileUrl = '@Url.Action("DownloadStudentsReport", "ProjectReport")'
                .concat('?filter=' + encodeURIComponent(localStorage.getItem(filterName) || "[]"));
            window.location.href = fileUrl;
            return false;
        }

        function changeYearSemester(year, semester) {
            if (year.length > 0 && semester.length > 0) {
                setFilters(year, semester);
            }
        }

        var semesterCmbxId = 'ProjectStudentsReportSemesterId';
        var yearCmbxId = 'ProjectStudentsReportYearId';
     
        var gridPanel = Ext.create('Ext.grid.Panel',
        {
            region: 'center',
            store: store,
            loadMask: true,
            columnLines: true,
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'tagfield',
                            fieldLabel: 'Учебный год',
                            id: yearCmbxId,
                            value: prevSettings["Years"],
                            store: yearsStore,
                            valueField: 'Year',
                            displayField: 'Year',
                            queryMode: 'local',
                            forceSelection: false,
                            allowBlank: false,
                            listeners: {
                                change: function (t, newValue, oldValue) {
                                    var semester = Ext.getCmp(semesterCmbxId).getValue();
                                    changeYearSemester(newValue, semester);
                                }
                            }
                        },
                        {
                            xtype: 'tagfield',
                            fieldLabel: 'Семестр',
                            id: semesterCmbxId,
                            margin: '0 5 0 5',
                            labelWidth: 65,
                            value: prevSettings["Semesters"],
                            store: semestersStore,
                            valueField: 'Id',
                            displayField: 'Name',
                            queryMode: 'local',
                            forceSelection: false,
                            allowBlank: false,
                            listeners: {
                                change: function (t, newValue, oldValue) {
                                    var year = Ext.getCmp(yearCmbxId).getValue();
                                    changeYearSemester(year, newValue);
                                }
                            }
                        }
                    ]
                },

                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            text: 'Фильтры',
                            handler: function () { filtersWnd.show(); }
                        },
                        {
                            xtype: 'button',
                            text: "Отменить фильтры",
                            handler: function () {
                                setFilters(Ext.getCmp(yearCmbxId).getValue(), Ext.getCmp(semesterCmbxId).getValue(), "", "", "");
                            }
                        }, '-',
                        {
                            xtype: 'button',
                            text: "Отчет в Excel",
                            handler: downloadReport
                        }

                    ]
                },
            ],
            columns: [
                { xtype: 'rownumberer', width: 50 },
                {
                    header: 'ФИО',
                    dataIndex: 'FullName',
                    width: 300,
                    renderer: Urfu.renders.htmlEncodeWithToolTip
                },
                {
                    header: 'Группа',
                    dataIndex: 'Group',
                    width: 130,
                    renderer: Urfu.renders.htmlEncodeWithToolTip
                },
                {
                    header: 'Статус',
                    dataIndex: 'Status',
                    width: 100,
                    renderer: Urfu.renders.htmlEncodeWithToolTip
                },
                {
                    header: 'Вид возмещения затрат',
                    dataIndex: 'Compensation',
                    width: 130,
                    renderer: Urfu.renders.htmlEncodeWithToolTip
                },
                {
                    header: 'Проектная группа',
                    dataIndex: 'CompetitionGroupShortName',
                    width: 200,
                    renderer: Urfu.renders.htmlEncodeWithToolTip
                },
                {
                    header: 'Проект',
                    dataIndex: 'Project',
                    width: 300,
                    renderer: Urfu.renders.htmlEncodeWithToolTip
                },
                {
                    header: 'Уровень',
                    align: 'centre',
                    dataIndex: 'Level',
                    width: 110,
                    renderer: Urfu.renders.htmlEncodeWithToolTip
                },
                {
                    header: 'Приоритет при выборе',
                    dataIndex: 'Priority',
                    width: 130,
                    renderer: Urfu.renders.htmlEncodeWithToolTip
                },
                {
                    header: 'Проектный статус',
                    dataIndex: 'AdmissionStatusName',
                    width: 130,
                    renderer: Urfu.renders.htmlEncodeWithToolTip
                },
                {
                    header: 'Роль',
                    dataIndex: 'Role',
                    width: 150,
                    renderer: Urfu.renders.htmlEncodeWithToolTip
                },
                {
                    header: 'Подгруппы',
                    dataIndex: 'Subgroups',
                    width: 300,
                    renderer: Urfu.renders.htmlEncodeWithToolTip
                }
            ]

        });
       
        var items = [
            gridPanel
        ];

        Urfu.createViewport('border', items);

    });
</script>

