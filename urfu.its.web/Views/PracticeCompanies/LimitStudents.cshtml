
@{
    ViewBag.Title = ViewBag.Title;
    Layout = "~/Views/Shared/_ExtLayout.cshtml";
}

@{
    <div class="form-horizontal">
        <script type="text/javascript">

            var lastFilter = [];
            Ext.onReady(function () {
                Ext.tip.QuickTipManager.init();

                function parseJson(json) {
                    var data = JSON.parse(json.replace(/&quot;/g, '"'));
                    return data;
                }

                var dataStatus = parseJson('@ViewBag.Status');
                var statusStore = Ext.create("Ext.data.Store",
                    {
                        data: dataStatus,

                    });

                var store = Ext.create("Ext.data.BufferedStore",
                    {
                        idProperty: 'Id',
                        autoLoad: true,
                        pageSize: 25,
                        remoteSort: true,
                        remoteFilter: true,
                        proxy: {
                            type: 'ajax',
                            url: '/PracticeCompanies/ContractStudents?limitId=@ViewBag.LimitId&contractKsId=@ViewBag.ContractKsId',
                            reader: {
                                type: 'json',
                                rootProperty: 'data',
                                totalProperty: 'total'
                            }
                        }
                    });

                var statusFilterCmbx = Ext.create('Ext.form.ComboBox',
                    {
                        xtype: 'combobox',
                        fieldLabel: 'Статус',
                        labelWidth: 50,
                        width: 200,
                        store: statusStore,
                        value: '',
                        valueField: 'StatusValue',
                        displayField: 'StatusName',
                        queryMode: 'local'
                    });

                function setFilters() {
                    settings = [
                        { property: 'Student', value: Ext.ComponentQuery.query('#StudentFilter')[0].getValue() },
                        { property: 'Group', value: Ext.ComponentQuery.query('#GroupFilter')[0].getValue() },
                        { property: 'StatusName', value: statusFilterCmbx.getValue() }
                    ];
                    store.setFilters(settings);
                }

                var tpl =
                '<a href=\'@Url.Action("Practice", "PracticeGroup")?id={id}&studentID={StudentId}&groupID={groupId}&year={year}&semesterID={semestrId}&disciplineUID={disciplineUID}\'>Руководители, темы</a>';
                function showEmpDetails(val, meta, rec, rIndex, cIndex, store) {
                return "<a href='#'>" + val + "</a>";
                //or apply any css class of your choice using
                //meta.css = ‘awesome-font-style’
                //return val;
            }



                var gridPanel = Ext.create('Ext.grid.Panel',
                    {
                        region: 'center',
                        store: store,
                        loadMask: true,
                        columnLines: true,
                        //enableLocking: true,
                        tbar: [
                            {
                                xtype: 'button',
                                text: "Договоры",
                                handler: function () {
                                    window.location = "/PracticeCompanies/Contracts?id=@ViewBag.CompanyId&focus=@ViewBag.ContractId";
                                }
                            }, '-',
                            {
                                xtype: 'textfield',
                                fieldLabel: 'ФИО студента',
                                labelWidth: 105,
                                itemId: 'StudentFilter',
                                width: 400
                            },
                            {
                                xtype: 'textfield',
                                fieldLabel: 'Группа',
                                labelWidth: 50,
                                itemId: 'GroupFilter',
                                width: 200
                            },
                            statusFilterCmbx,
                            {
                                xtype: 'button',
                                text: "Применить",
                                handler: function () {
                                    setFilters();
                                }
                            },
                            {
                                xtype: 'button',
                                text: "Отменить фильтры",
                                handler: function () {
                                    Ext.ComponentQuery.query('#StudentFilter')[0].setValue('');
                                    Ext.ComponentQuery.query('#GroupFilter')[0].setValue('');
                                    statusFilterCmbx.setValue('');
                                    store.clearFilter();
                                    settings = [];
                                }
                            },
                        ],
                        columns: [
                            { xtype: 'rownumberer', width: 50 },
                            {
                                header: 'Студент',
                                align: 'left',
                                dataIndex: 'Student',
                                width: 300,
                                cellWrap: true,
                              //  locked: true,
                                renderer: Urfu.renders.htmlEncodeWithToolTip
                            },
                            {
                                header: 'Группа',
                                align: 'left',
                                dataIndex: 'Group',
                                width: 150,
                                cellWrap: true,
                               // locked: true,
                                renderer: Urfu.renders.htmlEncodeWithToolTip
                            },
                            {
                                header: 'Статус',
                                align: 'left',
                                dataIndex: 'StatusName',
                                cellWrap: true,
                                width: 150,
                                renderer: Urfu.renders.htmlEncodeWithToolTip
                            },
                            {
                                header: 'Направление',
                                align: 'left',
                                dataIndex: 'Direction',
                                width: 200,
                                cellWrap: true,
                                renderer: Urfu.renders.htmlEncodeWithToolTip
                            },
                            {
                                header: 'Образовательная программа',
                                align: 'left',
                                dataIndex: 'Profile',
                                cellWrap: true,
                                width: 300,
                                renderer: Urfu.renders.htmlEncodeWithToolTip
                            },
                            {
                                header: 'Название практики',
                                align: 'left',
                                dataIndex: 'PracticeName',
                                cellWrap: true,
                                width: 300,
                                renderer: Urfu.renders.htmlEncodeWithToolTip
                            },
                            {
                                header: 'Тип практики',
                                align: 'left',
                                dataIndex: 'PracticeType',
                                cellWrap: true,
                                width: 200,
                                renderer: Urfu.renders.htmlEncodeWithToolTip
                            },
                            {
                                header: 'Сроки проведения',
                                align: 'left',
                                dataIndex: 'Dates',
                                cellWrap: true,
                                width: 200,
                                renderer: Urfu.renders.htmlEncodeWithToolTip
                            },

                            {
                                xtype: 'templatecolumn',
                                tpl: tpl,
                                sortable: false,
                                width: 175
                            }


                        ]
                    });


            var items = [
                gridPanel
            ];

            Urfu.createViewport('border', items);

            });
        </script>
    </div>
}
