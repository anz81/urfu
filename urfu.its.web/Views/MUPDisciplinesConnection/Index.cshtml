@using Urfu.Its.Web.Model.Models
@using Urfu.Its.Web.Models
@{
    ViewBag.Title = "Связи Модуль-МУПы";
    Layout = "~/Views/Shared/_ExtLayout.cshtml";
}

@section scripts
{
    <script type="text/javascript">
        Ext.onReady(function() {
            Ext.tip.QuickTipManager.init();

            function parseJson(json) {
                var data = JSON.parse(json.replace(/&quot;/g, '"'));
                return data;
            }

            var dataTypes = parseJson('@ViewBag.Types');
            var typesStore = Ext.create("Ext.data.Store",
                {
                    data: dataTypes
                });

            var dataMUPs = parseJson('@ViewBag.MUPs');
            var mupsStore = Ext.create("Ext.data.Store",
                {
                    data: dataMUPs
                });

            var store = Ext.create("Ext.data.BufferedStore",
                {
                    autoLoad: true,
                    pageSize: 300,
                    remoteSort: true,
                    remoteFilter: true,
                    proxy: {
                        type: 'ajax',
                        url: '/MUPDisciplinesConnection/Index',
                        reader: {
                            type: 'json',
                            rootProperty: 'data',
                            totalProperty: 'total'
                        }
                    }
                });

            var prevSettings = {};
            try {
                var prevSettingString = JSON.parse(localStorage.getItem("ModulesFilters") || "[]");

                for (var i = 0; i < prevSettingString.length; i++) {
                    if (prevSettingString[i]["property"] == "mups")
                        prevSettings["mupIds"] = prevSettingString[i]["value"];
                    else
                        prevSettings[prevSettingString[i]["property"]] = prevSettingString[i]["value"];
                }
            } catch (err) {
            }
            var filtersWnd = null;

            var setFilters = function() {
                var settings = [
                    { property: 'title', value: filtersWnd.getComponent("title").getValue() },
                    { property: 'numberStr', value: filtersWnd.getComponent("numberStr").getValue() },
                    { property: 'coordinator', value: filtersWnd.getComponent("coordinator").getValue() },
                    { property: 'specialities', value: filtersWnd.getComponent("specialities").getValue() },
                    { property: 'type', value: filtersWnd.getComponent("type").getValue() },
                    { property: 'mupIds', value: filtersWnd.getComponent("mup").getValue() }
                ];
                store.setFilters(settings);
                localStorage.setItem("ModulesFilters", JSON.stringify(settings));
            };


            filtersWnd = Ext.create('Ext.window.Window',
                {
                    title: "Фильтры",
                    closeAction: 'hide',
                    resizable: false,
                    autoHeight: false,
                    closeToolText:"Закрыть окно",
                    bodyPadding: 6,
                    defaults: {
                        xtype: 'textfield',
                        width: 500
                    },
                    items: [
                        { fieldLabel: "Название модуля", itemId: "title", value: prevSettings["title"] },
                        {
                            xtype: "combobox",
                            fieldLabel: "Номер модуля",
                            itemId: "numberStr",
                            width: 400,
                            value: prevSettings["numberStr"],
                            queryMode: 'remote',
                            minChars: 3,
                            queryParam: 'q',
                            emptyText: 'Начните вводить номер',
                            hideTrigger: true,
                            store: new Ext.data.Store({
                                proxy: {
                                    type: 'ajax',
                                    url: '@Url.Action("GetModuleNumbers")',
                                    reader: {
                                        type: 'json',
                                        rootProperty: 'data'
                                    }
                                }
                            }),
                            valueField: 'number',
                            displayField: 'number'
                        },
                        {
                            xtype: "combobox",
                            fieldLabel: "Координатор",
                            value: prevSettings["coordinator"],
                            itemId: "coordinator",
                            anyMatch: true,
                            queryMode: 'remote',
                            store: new Ext.data.Store({
                                autoLoad: false,
                                proxy: {
                                    type: 'ajax',
                                    url: '@Url.Action("GetCoordinators")',
                                    reader: {
                                        type: 'json',
                                        rootProperty: 'data'
                                    }
                                }
                            }),
                            valueField: 'coordinator',
                            displayField: 'coordinator'
                        },
                        {
                            fieldLabel: "Направления",
                            itemId: "specialities",
                            value: prevSettings["specialities"]
                        },
                        {
                            fieldLabel: "Тип",
                            itemId: "type",
                            value: prevSettings["type"],
                            xtype: "combobox",
                            store: typesStore,
                            valueField: 'Type',
                            displayField: 'Type',
                            queryMode: 'local',
                            anyMatch: true
                        },
                        {
                            fieldLabel: "МУП",
                            itemId: "mup",
                            value: prevSettings["mupIds"],
                            xtype: "combobox",
                            store: mupsStore,
                            valueField: 'MUPId',
                            displayField: 'MUPName',
                            queryMode: 'local',
                            anyMatch: true
                        },
                    ],
                    buttons: [
                        {
                            text: "OK",
                            handler: function() {
                                setFilters();
                                filtersWnd.hide();
                            }
                        },
                        {
                            text: "Отмена",
                            handler: function() { filtersWnd.hide(); }
                        }
                    ]
                });

            setFilters();

            var moduleId = "";
            var moduleTitle = "";
            var recIndex = "";

            var mups = Ext.create("Ext.data.Store",
                {
                    autoLoad: false,
                    proxy: {
                        type: 'ajax',
                        reader: {
                            type: 'json',
                            rootProperty: 'data'
                        }
                    },
                    listeners: {
                        load: function(t, records) {
                            disciplines.proxy.setUrl('@Url.Action("DisciplinesByModule")?moduleId=' + moduleId);
                            disciplines.reload();
                        }
                    }
                });

            var disciplines = Ext.create("Ext.data.Store",
                {
                    autoLoad: false,
                    proxy: {
                        type: 'ajax',
                        reader: {
                            type: 'json',
                            rootProperty: 'data'
                        }
                    },
                    listeners: {
                        load: function(t, records) {
                            var containerItems = [];
                            records.forEach(function(item, index, arr) {
                                var container = Ext.create('Ext.container.Container',
                                    {
                                        layout: {
                                            type: 'vbox'
                                        },
                                        autoHeight: true,
                                        width: 600,
                                        renderTo: Ext.getBody(),
                                        margin: '0 0 10 0',
                                        items: [
                                            {
                                                xtype: 'hidden',
                                                name: 'uid',
                                                value: item.data.uid
                                            },
                                            {
                                                xtype: 'label',
                                                text: item.data.title,
                                                autoHeight: true,
                                                width: 600,
                                                style: 'font-size: 110%; text-decoration: underline;'
                                            },
                                            Ext.create('Ext.form.field.Tag',
                                                {
                                                    name: 'mups',
                                                    fieldLabel: 'МУПы',
                                                    labelWidth: 50,
                                                    store: mups,
                                                    value: item.data.mups,
                                                    allowBlank: true,
                                                    editable: true,
                                                    width: 600,
                                                    queryMode: 'local',
                                                    displayField: 'Name',
                                                    valueField: 'Id',
                                                    anyMatch: true
                                                })
                                        ]
                                    });
                                containerItems.push(container);
                            });
                            var connectionWnd = Ext.create('Ext.window.Window',
                                {
                                    title: moduleTitle,
                                    closeAction: 'hide',
                                    resizable: true,
                                    x: 100,
                                    y: 100,
                                    autoHeight: true,
                                    width: 650,
                                    maxHeight: 600,
                                    scrollable: true,
                                    bodyPadding: 6,
                                    overflowY: 'auto',
                                    items: {
                                        xtype: 'form',
                                        name: 'connects',
                                        defaults: {
                                            labelWidth: 130
                                        },
                                        items: containerItems
                                    },
                                    buttons: [
                                        {
                                            text: "Сохранить",
                                            hidden: '@ViewBag.CanEdit' == 'False',
                                            handler: function() {
                                                var window = this.up('window');

                                                var data = [];
                                                var error = false;
                                                var mupsList = [];
                                                window.down('form').items.items.forEach(function(item, index, arr) {
                                                    var mupsItems = item.items.findBy(el => el.name == 'mups').getValue();
                                                    data.push({ 'uid': item.items.findBy(el => el.name == 'uid').getValue(), 'mups': mupsItems });
                                                    mupsItems.forEach(function(item2, index2, arr2) {
                                                        if (mupsList.includes(item2))
                                                            error = true;
                                                    });
                                                    mupsList = mupsList.concat(mupsItems);
                                                });

                                                if (error) {
                                                    Ext.MessageBox.show({
                                                        title: 'Ошибка',
                                                        msg: 'МУП можно связать только с одной дисциплиной',
                                                        buttons: Ext.MessageBox.OK
                                                    });
                                                    return;
                                                }

                                                Ext.Ajax.request({
                                                    method: 'POST',
                                                    dataType: 'json',
                                                    url: '@Url.Action("ConnectDisciplineToMUP")',
                                                    params: {
                                                        moduleId: moduleId,
                                                        mups: JSON.stringify(data)
                                                    },
                                                    success: function(response) {
                                                        var data = Ext.decode(response.responseText);

                                                        Ext.MessageBox.show({
                                                            title: 'Информационное сообщение',
                                                            msg: data.success ? 'Изменения сохранены' : data.message,
                                                            buttons: Ext.MessageBox.OK
                                                        });

                                                        gridPanel.getStore().getAt(recIndex).data.mups = data.mupsList;
                                                        gridPanel.getStore().getAt(recIndex).data.hasMUP = true;
                                                        gridPanel.getView().refresh();

                                                        window.close();
                                                    },
                                                    failure: function(response) {
                                                        Ext.MessageBox.show({
                                                            title: 'Информационное сообщение',
                                                            msg: 'Ошибка',
                                                            buttons: Ext.MessageBox.OK
                                                        });
                                                    }
                                                });
                                            }
                                        },
                                        {
                                            text: "Отмена",
                                            hidden: '@ViewBag.CanEdit' == 'False',
                                            handler: function() {
                                                var wnd = this.up('window');
                                                wnd.close();
                                            }
                                        }
                                    ]
                                }
                            );
                            connectionWnd.show();
                        }
                    }
                });

            var gridPanel = Ext.create('Ext.grid.Panel',
                {
                    region: 'center',
                    store: store,
                    tbar: [
                        {
                            xtype: 'button',
                            text: 'Фильтры...',
                            handler: function() { filtersWnd.show(); }
                        },
                        {
                            xtype: 'button',
                            text: "Отменить фильтры",
                            handler: function() {
                                store.clearFilter();
                                localStorage.setItem("ModulesFilters", JSON.stringify([]));
                            }
                        }
                    ],
                    loadMask: true,
                    columnLines: true,
                    plugins: [
                        {
                            ptype: "rowexpander",
                            rowBodyTpl: new Ext.XTemplate(
                                '<p><b>Компетенции: </b>{competence}</p>',
                                '<p><b>Зачётные единицы: </b>{testUnits}</p>',
                                '<p><b>Приоритет: </b>{priority}</p>',
                                '<p><b>Состояние: </b>{state}</p>',
                                '<p><b>Дата утверждения: </b>{approvedDate}</p>',
                                '<p><b>Комментарий: </b>{comment}</p>',
                                '<p><b>Номер: </b>{number}</p>',
                            ),
                            headerWidth: 30
                        }
                    ],
                    columns: [
                        { xtype: 'rownumberer', width: 50 },
                        {
                            header: 'Направления',
                            align: 'left',
                            dataIndex: 'specialities',
                            width: 150,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'Номер',
                            align: 'left',
                            dataIndex: 'numberStr',
                            width: 120,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'Название модуля',
                            dataIndex: 'title',
                            width: 400,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'Короткое название модуля',
                            dataIndex: 'shortTitle',
                            width: 400,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'Координатор',
                            align: 'left',
                            dataIndex: 'coordinator',
                            width: 200,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'Тип',
                            align: 'center',
                            dataIndex: 'type',
                            width: 150,
                            renderer: Urfu.renders.htmlEncodeWithToolTip
                        },
                        {
                            header: 'МУПы',
                            align: 'center',
                            dataIndex: 'mups',
                            width: 300,
                            renderer: function(value, metaData) {
                                metaData.tdAttr = 'data-qtip="' + Ext.String.htmlEncode(value) + '"';
                                return value.join(', </br>');
                            }
                        },
                        {
                            xtype: 'actioncolumn',
                            region: 'center',
                            sortable: false,
                            width: 50,
                            items: [
                                {
                                    icon: '@Url.Content("~/Content/Images/clip.png")',
                                    iconCls: 'icon-padding',
                                    tooltip: 'Связать с МУПом',
                                    handler: function(grid, rowIndex, colIndex) {
                                        if ('@ViewBag.CanEdit' == 'True') {
                                            var rec = grid.getStore().getAt(rowIndex);
                                            moduleId = rec.get('id');
                                            moduleTitle = rec.get('title');
                                            recIndex = rowIndex;

                                            mups.proxy.setUrl('@Url.Action("MUPs")?moduleId=' + moduleId);
                                            mups.reload();
                                        } else {
                                            Ext.MessageBox.alert('Ошибка', "У вас нет прав вносить изменения");
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            sortable: false,
                            width: 250,
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

                                var tpl = Ext.String.format('<a href="{0}">Файл</a> | <a href="@Url.Action("Edit", "MUPDisciplinesConnection")?id={1}">Изменить</a>\
                                    | <a href="@Url.Action("Disciplines", "MUPDisciplinesConnection")?moduleId={2}">Дисциплины</a>',
                                    record.data.file,
                                    record.data.id,
                                    record.data.id);

                                if (record.data.hasMUP)
                                    return tpl;
                                else return Ext.String.format('<a href="{0}">Файл</a>', record.data.file);
                            }
                        }
                    ]
                });

            var items = [
                gridPanel
            ];

            Urfu.createViewport('border', items);
        });
    </script>
}